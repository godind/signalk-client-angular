{"version":3,"file":"signalk-client-angular.umd.js.map","sources":["ng://signalk-client-angular/lib/signalk-client.ts"],"sourcesContent":["import { Injectable, isDevMode } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Subject, Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SignalKClient {\n\n\tprivate _connect; \t\t\t\n    public onConnect;\t \t\t\n\tprivate _close; \t\t\t\n    public onClose;\t \t\t    \n\tprivate _error; \t\t\t\n    public onError;\t \t\t    \n\tprivate _message; \t\t\t\n    public onMessage;\t \t\t  \n    private ws;                           \n    \n    private hostname: string;\n    private port: number;\n    private protocol: string;\n    private wsProtocol: string;\n\n    private _version: string= 'v1';      // ** default Signal K api version\n    private _filter= null;               // ** id of vessel to filter delta messages\n\n    // ** server information block **\n    private server= {\n        endpoints: {},\n        info: {},\n        apiVersions: [],\n        ws: { self: null, roles: {} }\n    }\n\n    private debug(val: any) { if(isDevMode()){ console.log(val) } }\n\n    constructor( private http: HttpClient ) { \n        this._connect= new Subject<string>();\n        this.onConnect= this._connect.asObservable();   \n        this._close= new Subject<string>();\n        this.onClose= this._close.asObservable();  \n        this._error= new Subject<string>();\n        this.onError= this._error.asObservable();  \n        this._message= new Subject<string>();\n        this.onMessage= this._message.asObservable();   \n        this.init();                          \n    }\n\n    // **************** Signal K API VERSION ***************************\n\n    // ** get / set Signal K preferred api version to use **\n    get version():number { return parseInt( this._version.slice(1) ) }\n\n    set version(val: number) {\n        let v:string= 'v'+ val;\n        if(this.server.apiVersions.length==0) { \n            this._version= v;\n            this.debug(`Signal K api version set to: ${v}`);\n        }\n        else {\n            this._version= (this.server.apiVersions.indexOf(v)!=-1) ? v : this._version;\n            this.debug(`Signal K api version set request: ${v}, result: ${this._version}`);\n        }\n    }\n\n    // **************** CONNECTION  ***************************\n\n    // ** initialise client connection settings\n    private init(hostname:string=null, port:number=null, useSSL:boolean=false) {\n        if(isDevMode()) { \n            hostname= hostname || '192.168.99.100';\n            port= port || 3000;  \n        }\n        else { hostname= hostname || 'localhost' }\n\n        this.hostname = hostname;\n        if(useSSL) {\n            this.protocol = 'https';\n            this.wsProtocol = 'wss';\n            this.port = port || 443;\n        } \n        else {\n            this.protocol = 'http';\n            this.wsProtocol = 'ws';\n            this.port = port || 80;\n        }        \n    }\n\n    // ** Signal K server discovery request (/signalk).  \n    hello(hostname:string=null, port:number=null, useSSL:boolean=false) {\n        this.init(hostname, port, useSSL);\n        return this.get('/signalk');\n    }    \n    \n    // ** connect to server\n    connect(hostname:string=null, port:number=null, useSSL:boolean=false, subscribe:string=null) {\n        this.debug('Contacting Signal K server.........');\n        this.hello(hostname, port).subscribe(    // ** discover endpoints **\n            response=> {\n                this.server.endpoints= (response['endpoints']) ? response['endpoints'] : {};\n                this.server.info= (response['server']) ? response['server'] : {};\n                this.server.apiVersions= (this.server.endpoints) ? Object.keys(this.server.endpoints) : [];\n                this.debug(this.server.endpoints);\n                \n                // ** connect to stream api at preferred version else fall back to default version\n                let url;\n                if(this.server.endpoints[this._version] && this.server.endpoints[this._version]['signalk-ws']) {\n                    this.debug(`Connecting endpoint version: ${this._version}`);\n                    url= `${this.server.endpoints[this._version]['signalk-ws']}`;\n                }\n                else if(this.server.endpoints['v1'] && this.server.endpoints['v1']['signalk-ws']) { \n                    this.debug(`Connection falling back to: v1`);\n                    url= `${this.server.endpoints['v1']['signalk-ws']}` \n                }\n                else { \n                    this._error.next( new Error('No Signal K endpoints found!') );\n                    return;\n                }\n                // ** subscribe **\n                if(subscribe && ['self','all','none'].indexOf(subscribe)!=-1) { \n                    url+=`?subscribe=${subscribe}`;\n                }                \n                this.debug(`Connecting to ${url}`);\n                this.connectDeltaByUrl(url);\n            },\n            error=> { \n                this.server.endpoints= {};\n                this.server.info= {};\n                this.server.apiVersions= [];            \n                return this._error.next( error );\n            }\n        );\n    }  \n\n    // ** connect to delta stream with no endpoint discovery\n    connectDelta(hostname:string=null, port:number=null, useSSL:boolean=false, subscribe:string=null) {\n        this.debug('ConnectDelta.........');\n        this.init(hostname, port, useSSL);\n        let url= `${this.wsProtocol}://${this.hostname}:${this.port}/signalk/${this._version}/stream`;\n        // ** subscribe **\n        if(subscribe && ['self','all','none'].indexOf(subscribe)!=-1) { \n            url+=`?subscribe=${subscribe}`;\n        }                \n        this.debug(`Connecting to delta stream at ${url}`);\n        this.connectDeltaByUrl(url);\n    }  \n\n\t// ** connect to delta stream at provided url\n\tprivate connectDeltaByUrl(url) {\n        if(this.ws) { this.disconnect() }\n\t\tthis.ws = new WebSocket(url);\n\t\t\n\t\tthis.ws.onopen= e=> { \n            this.debug(`ws.open`);\n\t\t\tthis._connect.next(e);\n\t\t}\n\t\tthis.ws.onclose= e=> { this.debug(`ws.close`); this._close.next(e) }\n\t\tthis.ws.onerror= e=> { this.debug(`ws.error`); this._error.next(e) }\n\t\tthis.ws.onmessage= e=> {\n            let data;\n            if(typeof e.data === 'string') {\n                try { data= JSON.parse(e.data) }\n                catch(e) { return }\n            }\n            if(this.isHello(data)) {\n                this.server.ws.roles= data.roles;\n                this.server.ws.self= data.self;\n            }          \n\t\t\tif(this._filter && this.isDelta(data)) {\n                if(data.context== this._filter) { this._message.next(data) } \n            }\n            else { this._message.next(data) }\n\t\t}\n    }  \n\n    // ** disconnect from Signal K stream\n    disconnect() {\n        this.ws.close();\n        this.ws= null;\n        this.server.ws= { self: null, roles: {} };\n    }\n\n\n    // **************** STREAM API ***************************\n\n    // ** send data to Signal K stream\n    send(data:any) {\n        if(this.ws) {\n            if(typeof data === 'object') { data= JSON.stringify(data) }\n            this.ws.send(data);\n        }\n    }\n\n    // ** Subscribe to Delta stream messages **\n    subscribe(context:string='*', path:string='*', ...options) {\n        let data= {\n            context: (context=='self') ? 'vessels.self' : context,\n            subscribe: []\n        };\n\n        let subscription= {};\n        subscription['path']= path;\n        for(let i in options) {\n            switch(i) {\n                case '0': \n                    if( !isNaN(options[i]) ) { subscription['period']= parseInt(options[i]) }\n                    break;\n                case '1': \n                    if( options[i]=='delta' || options[i]=='full') { \n                        subscription['format']= options[i] \n                    }\n                    break;\n                case '2': \n                    if( options[i]=='instant' || options[i]=='ideal' \n                            || options[i]== 'fixed' ) {\n                                subscription['policy']= options[i];\n                    }\n                    break;     \n                case '3': \n                    if(subscription['policy']=='instant') {\n                        if( !isNaN(options[i]) ) { subscription['minPeriod']= parseInt(options[i]) } \n                    }\n                    break;\n            }\n        }\n        data.subscribe.push(subscription);\n        this.send(data);        \n    }\n\n    // ** Unsubscribe from Delta stream messages **\n    unsubscribe(context:string='*', path:string='*') {\n        context= (context=='self') ? 'vessels.self' : context;\n        this.send({\n            \"context\": context,\n            \"unsubscribe\": [ {\"path\": path} ]\n        });\n    }\n\n    // ** returns true if recieved message is a Delta message\n    isDelta(msg) { return typeof msg.context!= 'undefined' }\n    // ** returns true if recieved message is a Hello message\n    isHello(msg) { return typeof msg.version!= 'undefined' }\n\n    // ** get / set filter to select delta messages just for supplied vessel id   \n    get filter(): string { return this._filter }\n    // ** set filter= null to remove message filtering\n    set filter(id:string) { \n        if(!id) {   // ** clear filter\n            this._filter=null;\n            return;\n        }\n        if( id.indexOf('self')!=-1 ) {  // ** self\n            if(!this.server.ws.self) {\n                this.getSelfId().subscribe( id=> { this._filter= id } );\n            }\n            else { this._filter= this.server.ws.self }\n        }\n        else {  // ** uuid\n            let uuid= RegExp(\"^urn:mrn:signalk:uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$\")\n            if(id.indexOf('vessels.')!=-1) { id= id.slice(id.indexOf('.')+1) }\n            if(uuid.test(id)) { this._filter= `vessels.${id}` }\n        }\n    }\n        \n\n    // **************** HTTP API ***************************\n    \n    // ** Returns the contents of the Signal K tree pointed to by self\n    getSelf() { return this.apiGet(`vessels/self`) }\n\n    // ** Returns the self identity\n    getSelfId() { return this.apiGet(`self`) }\n\n    // ** return observable response for meta object at the specified context and path\n    getMeta(context:string, path:string) { \n        return this.apiGet(`${this.contextToPath(context)}/${path.split('.').join('/')}/meta`);\n    }    \n\n    //** return observable response from http api path\n    apiGet(path:string) { \n        let url= this.resolveHttpEndpoint();\n        if(!url) { return }\n        if(path[0]=='/') { path= path.slice(1) }\n        url+= path;\n        this.debug(`apiGet ${url}`);\n        return this.http.get(url);\n    }\n\n    //** Send value to http api path\n    apiPut(context:string, path:string, key:any, value:any) { \n        let url= this.resolveHttpEndpoint();\n        if(!url) { return }\n        if(path[0]=='/') { path= path.slice(1) }\n        url+= this.contextToPath(context) + '/' + path;\n\n        let msg = { value: {} } \n        msg.value[key]= value;\n    \n        this.debug(`apiPut ${url}`);\n        this.debug(JSON.stringify(msg));\n        return this.http.put(url, msg);\n    }    \n    \n    //** return observable response from http path\n    private get(path:string) { \n        let url= `${this.protocol}://${this.hostname}:${this.port}${path}`;\n        this.debug(`get ${url}`);\n        return this.http.get(url);\n    };  \n\n    // ** return url for connected signalk-http endpoint\n    private resolveHttpEndpoint() {\n        let url;\n        if(this.server.endpoints[this._version]) { // ** connection made\n            // ** connect to http endpoint at prescribed version else fall back to default version\n            if(this.server.endpoints[this._version]['signalk-http']) {\n                url= `${this.server.endpoints[this._version]['signalk-http']}`;\n            }\n            else { url= `${this.server.endpoints['v1']['signalk-http']}` }   \n        } \n        else {\n            let msg= 'No current connection http endpoint service! Use connect() to establish a connection.'\n            this.debug(msg);\n            this._error.next(new Error(msg) );\n        } \n        return url;   \n    }\n\n    // ** parse context to valid Signal K path\n    private contextToPath(context:string) {\n        let res= (context=='self' ) ? 'vessels.self': context;\n        return res.split('.').join('/');\n    }\n\n}\n"],"names":["Subject","isDevMode","Injectable","HttpClient"],"mappings":";;;;;;;;;;AAAA;QAqCI,uBAAqB,IAAgB;YAAhB,SAAI,GAAJ,IAAI,CAAY;4BAbX,IAAI;2BACb,IAAI;0BAGL;gBACZ,SAAS,EAAE,EAAE;gBACb,IAAI,EAAE,EAAE;gBACR,WAAW,EAAE,EAAE;gBACf,EAAE,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,EAAE;aAChC;YAKG,IAAI,CAAC,QAAQ,GAAE,IAAIA,YAAO,EAAU,CAAC;YACrC,IAAI,CAAC,SAAS,GAAE,IAAI,CAAC,QAAQ,CAAC,YAAY,EAAE,CAAC;YAC7C,IAAI,CAAC,MAAM,GAAE,IAAIA,YAAO,EAAU,CAAC;YACnC,IAAI,CAAC,OAAO,GAAE,IAAI,CAAC,MAAM,CAAC,YAAY,EAAE,CAAC;YACzC,IAAI,CAAC,MAAM,GAAE,IAAIA,YAAO,EAAU,CAAC;YACnC,IAAI,CAAC,OAAO,GAAE,IAAI,CAAC,MAAM,CAAC,YAAY,EAAE,CAAC;YACzC,IAAI,CAAC,QAAQ,GAAE,IAAIA,YAAO,EAAU,CAAC;YACrC,IAAI,CAAC,SAAS,GAAE,IAAI,CAAC,QAAQ,CAAC,YAAY,EAAE,CAAC;YAC7C,IAAI,CAAC,IAAI,EAAE,CAAC;SACf;;;;;QAZO,6BAAK;;;;sBAAC,GAAQ;gBAAI,IAAGC,YAAS,EAAE,EAAC;oBAAE,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAA;iBAAE;;QAiB7D,sBAAI,kCAAO;;;;;gBAAX,cAAuB,OAAO,QAAQ,CAAE,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,CAAE,CAAA,EAAE;;;;gBAElE,UAAY,GAAW;;gBACnB,IAAI,CAAC,GAAS,GAAG,GAAE,GAAG,CAAC;gBACvB,IAAG,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,MAAM,IAAE,CAAC,EAAE;oBAClC,IAAI,CAAC,QAAQ,GAAE,CAAC,CAAC;oBACjB,IAAI,CAAC,KAAK,CAAC,kCAAgC,CAAG,CAAC,CAAC;iBACnD;qBACI;oBACD,IAAI,CAAC,QAAQ,GAAE,CAAC,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC,CAAC,IAAE,CAAC,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC;oBAC5E,IAAI,CAAC,KAAK,CAAC,uCAAqC,CAAC,kBAAa,IAAI,CAAC,QAAU,CAAC,CAAC;iBAClF;aACJ;;;WAZiE;;;;;;;QAiB1D,4BAAI;;;;;;sBAAC,QAAoB,EAAE,IAAgB,EAAE,MAAoB;gBAA5D,yBAAA;oBAAA,eAAoB;;gBAAE,qBAAA;oBAAA,WAAgB;;gBAAE,uBAAA;oBAAA,cAAoB;;gBACrE,IAAGA,YAAS,EAAE,EAAE;oBACZ,QAAQ,GAAE,QAAQ,IAAI,gBAAgB,CAAC;oBACvC,IAAI,GAAE,IAAI,IAAI,IAAI,CAAC;iBACtB;qBACI;oBAAE,QAAQ,GAAE,QAAQ,IAAI,WAAW,CAAA;iBAAE;gBAE1C,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;gBACzB,IAAG,MAAM,EAAE;oBACP,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC;oBACxB,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;oBACxB,IAAI,CAAC,IAAI,GAAG,IAAI,IAAI,GAAG,CAAC;iBAC3B;qBACI;oBACD,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC;oBACvB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;oBACvB,IAAI,CAAC,IAAI,GAAG,IAAI,IAAI,EAAE,CAAC;iBAC1B;;;;;;;;;QAIL,6BAAK;;;;;;YAAL,UAAM,QAAoB,EAAE,IAAgB,EAAE,MAAoB;gBAA5D,yBAAA;oBAAA,eAAoB;;gBAAE,qBAAA;oBAAA,WAAgB;;gBAAE,uBAAA;oBAAA,cAAoB;;gBAC9D,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,EAAE,MAAM,CAAC,CAAC;gBAClC,OAAO,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;aAC/B;;;;;;;;;QAGD,+BAAO;;;;;;;YAAP,UAAQ,QAAoB,EAAE,IAAgB,EAAE,MAAoB,EAAE,SAAqB;gBAA3F,iBAqCC;gBArCO,yBAAA;oBAAA,eAAoB;;gBAAE,qBAAA;oBAAA,WAAgB;;gBAAE,uBAAA;oBAAA,cAAoB;;gBAAE,0BAAA;oBAAA,gBAAqB;;gBACvF,IAAI,CAAC,KAAK,CAAC,qCAAqC,CAAC,CAAC;gBAClD,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC,SAAS;;gBAChC;gBAAA,QAAQ;oBACJ,KAAI,CAAC,MAAM,CAAC,SAAS,GAAE,CAAC,QAAQ,CAAC,WAAW,CAAC,IAAI,QAAQ,CAAC,WAAW,CAAC,GAAG,EAAE,CAAC;oBAC5E,KAAI,CAAC,MAAM,CAAC,IAAI,GAAE,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,QAAQ,CAAC,QAAQ,CAAC,GAAG,EAAE,CAAC;oBACjE,KAAI,CAAC,MAAM,CAAC,WAAW,GAAE,CAAC,KAAI,CAAC,MAAM,CAAC,SAAS,IAAI,MAAM,CAAC,IAAI,CAAC,KAAI,CAAC,MAAM,CAAC,SAAS,CAAC,GAAG,EAAE,CAAC;oBAC3F,KAAI,CAAC,KAAK,CAAC,KAAI,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;;oBAGlC,IAAI,GAAG,CAAC;oBACR,IAAG,KAAI,CAAC,MAAM,CAAC,SAAS,CAAC,KAAI,CAAC,QAAQ,CAAC,IAAI,KAAI,CAAC,MAAM,CAAC,SAAS,CAAC,KAAI,CAAC,QAAQ,CAAC,CAAC,YAAY,CAAC,EAAE;wBAC3F,KAAI,CAAC,KAAK,CAAC,kCAAgC,KAAI,CAAC,QAAU,CAAC,CAAC;wBAC5D,GAAG,GAAE,KAAG,KAAI,CAAC,MAAM,CAAC,SAAS,CAAC,KAAI,CAAC,QAAQ,CAAC,CAAC,YAAY,CAAG,CAAC;qBAChE;yBACI,IAAG,KAAI,CAAC,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,KAAI,CAAC,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,YAAY,CAAC,EAAE;wBAC9E,KAAI,CAAC,KAAK,CAAC,gCAAgC,CAAC,CAAC;wBAC7C,GAAG,GAAE,KAAG,KAAI,CAAC,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,YAAY,CAAG,CAAA;qBACtD;yBACI;wBACD,KAAI,CAAC,MAAM,CAAC,IAAI,CAAE,IAAI,KAAK,CAAC,8BAA8B,CAAC,CAAE,CAAC;wBAC9D,OAAO;qBACV;;oBAED,IAAG,SAAS,IAAI,CAAC,MAAM,EAAC,KAAK,EAAC,MAAM,CAAC,CAAC,OAAO,CAAC,SAAS,CAAC,IAAE,CAAC,CAAC,EAAE;wBAC1D,GAAG,IAAE,gBAAc,SAAW,CAAC;qBAClC;oBACD,KAAI,CAAC,KAAK,CAAC,mBAAiB,GAAK,CAAC,CAAC;oBACnC,KAAI,CAAC,iBAAiB,CAAC,GAAG,CAAC,CAAC;iBAC/B,EACD,UAAA,KAAK;oBACD,KAAI,CAAC,MAAM,CAAC,SAAS,GAAE,EAAE,CAAC;oBAC1B,KAAI,CAAC,MAAM,CAAC,IAAI,GAAE,EAAE,CAAC;oBACrB,KAAI,CAAC,MAAM,CAAC,WAAW,GAAE,EAAE,CAAC;oBAC5B,OAAO,KAAI,CAAC,MAAM,CAAC,IAAI,CAAE,KAAK,CAAE,CAAC;iBACpC,CACJ,CAAC;aACL;;;;;;;;;QAGD,oCAAY;;;;;;;YAAZ,UAAa,QAAoB,EAAE,IAAgB,EAAE,MAAoB,EAAE,SAAqB;gBAAnF,yBAAA;oBAAA,eAAoB;;gBAAE,qBAAA;oBAAA,WAAgB;;gBAAE,uBAAA;oBAAA,cAAoB;;gBAAE,0BAAA;oBAAA,gBAAqB;;gBAC5F,IAAI,CAAC,KAAK,CAAC,uBAAuB,CAAC,CAAC;gBACpC,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,EAAE,MAAM,CAAC,CAAC;;gBAClC,IAAI,GAAG,GAAK,IAAI,CAAC,UAAU,WAAM,IAAI,CAAC,QAAQ,SAAI,IAAI,CAAC,IAAI,iBAAY,IAAI,CAAC,QAAQ,YAAS,CAAC;;gBAE9F,IAAG,SAAS,IAAI,CAAC,MAAM,EAAC,KAAK,EAAC,MAAM,CAAC,CAAC,OAAO,CAAC,SAAS,CAAC,IAAE,CAAC,CAAC,EAAE;oBAC1D,GAAG,IAAE,gBAAc,SAAW,CAAC;iBAClC;gBACD,IAAI,CAAC,KAAK,CAAC,mCAAiC,GAAK,CAAC,CAAC;gBACnD,IAAI,CAAC,iBAAiB,CAAC,GAAG,CAAC,CAAC;aAC/B;;;;;QAGI,yCAAiB;;;;sBAAC,GAAG;;gBACtB,IAAG,IAAI,CAAC,EAAE,EAAE;oBAAE,IAAI,CAAC,UAAU,EAAE,CAAA;iBAAE;gBACvC,IAAI,CAAC,EAAE,GAAG,IAAI,SAAS,CAAC,GAAG,CAAC,CAAC;gBAE7B,IAAI,CAAC,EAAE,CAAC,MAAM,GAAE,UAAA,CAAC;oBACP,KAAI,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC;oBAC/B,KAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;iBACtB,CAAA;gBACD,IAAI,CAAC,EAAE,CAAC,OAAO,GAAE,UAAA,CAAC,IAAK,KAAI,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC,CAAC,KAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAA,EAAE,CAAA;gBACpE,IAAI,CAAC,EAAE,CAAC,OAAO,GAAE,UAAA,CAAC,IAAK,KAAI,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC,CAAC,KAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAA,EAAE,CAAA;gBACpE,IAAI,CAAC,EAAE,CAAC,SAAS,GAAE,UAAA,CAAC;;oBACV,IAAI,IAAI,CAAC;oBACT,IAAG,OAAO,CAAC,CAAC,IAAI,KAAK,QAAQ,EAAE;wBAC3B,IAAI;4BAAE,IAAI,GAAE,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,CAAA;yBAAE;wBAChC,OAAM,CAAC,EAAE;4BAAE,OAAM;yBAAE;qBACtB;oBACD,IAAG,KAAI,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE;wBACnB,KAAI,CAAC,MAAM,CAAC,EAAE,CAAC,KAAK,GAAE,IAAI,CAAC,KAAK,CAAC;wBACjC,KAAI,CAAC,MAAM,CAAC,EAAE,CAAC,IAAI,GAAE,IAAI,CAAC,IAAI,CAAC;qBAClC;oBACV,IAAG,KAAI,CAAC,OAAO,IAAI,KAAI,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE;wBAC1B,IAAG,IAAI,CAAC,OAAO,IAAG,KAAI,CAAC,OAAO,EAAE;4BAAE,KAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAA;yBAAE;qBAC/D;yBACI;wBAAE,KAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAA;qBAAE;iBAC1C,CAAA;;;;;;QAIC,kCAAU;;;YAAV;gBACI,IAAI,CAAC,EAAE,CAAC,KAAK,EAAE,CAAC;gBAChB,IAAI,CAAC,EAAE,GAAE,IAAI,CAAC;gBACd,IAAI,CAAC,MAAM,CAAC,EAAE,GAAE,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,EAAE,CAAC;aAC7C;;;;;;;QAMD,4BAAI;;;;YAAJ,UAAK,IAAQ;gBACT,IAAG,IAAI,CAAC,EAAE,EAAE;oBACR,IAAG,OAAO,IAAI,KAAK,QAAQ,EAAE;wBAAE,IAAI,GAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAA;qBAAE;oBAC3D,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;iBACtB;aACJ;;;;;;;;QAGD,iCAAS;;;;;;YAAT,UAAU,OAAkB,EAAE,IAAe;gBAAnC,wBAAA;oBAAA,aAAkB;;gBAAE,qBAAA;oBAAA,UAAe;;gBAAE,iBAAU;qBAAV,UAAU,EAAV,qBAAU,EAAV,IAAU;oBAAV,gCAAU;;;gBACrD,IAAI,IAAI,GAAE;oBACN,OAAO,EAAE,CAAC,OAAO,IAAE,MAAM,IAAI,cAAc,GAAG,OAAO;oBACrD,SAAS,EAAE,EAAE;iBAChB,CAAC;;gBAEF,IAAI,YAAY,GAAE,EAAE,CAAC;gBACrB,YAAY,CAAC,MAAM,CAAC,GAAE,IAAI,CAAC;gBAC3B,KAAI,IAAI,CAAC,IAAI,OAAO,EAAE;oBAClB,QAAO,CAAC;wBACJ,KAAK,GAAG;4BACJ,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAE,EAAE;gCAAE,YAAY,CAAC,QAAQ,CAAC,GAAE,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAA;6BAAE;4BACzE,MAAM;wBACV,KAAK,GAAG;4BACJ,IAAI,OAAO,CAAC,CAAC,CAAC,IAAE,OAAO,IAAI,OAAO,CAAC,CAAC,CAAC,IAAE,MAAM,EAAE;gCAC3C,YAAY,CAAC,QAAQ,CAAC,GAAE,OAAO,CAAC,CAAC,CAAC,CAAA;6BACrC;4BACD,MAAM;wBACV,KAAK,GAAG;4BACJ,IAAI,OAAO,CAAC,CAAC,CAAC,IAAE,SAAS,IAAI,OAAO,CAAC,CAAC,CAAC,IAAE,OAAO;mCACrC,OAAO,CAAC,CAAC,CAAC,IAAG,OAAQ,EAAE;gCACtB,YAAY,CAAC,QAAQ,CAAC,GAAE,OAAO,CAAC,CAAC,CAAC,CAAC;6BAC9C;4BACD,MAAM;wBACV,KAAK,GAAG;4BACJ,IAAG,YAAY,CAAC,QAAQ,CAAC,IAAE,SAAS,EAAE;gCAClC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAE,EAAE;oCAAE,YAAY,CAAC,WAAW,CAAC,GAAE,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAA;iCAAE;6BAC/E;4BACD,MAAM;qBACb;iBACJ;gBACD,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;gBAClC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;aACnB;;;;;;;QAGD,mCAAW;;;;;YAAX,UAAY,OAAkB,EAAE,IAAe;gBAAnC,wBAAA;oBAAA,aAAkB;;gBAAE,qBAAA;oBAAA,UAAe;;gBAC3C,OAAO,GAAE,CAAC,OAAO,IAAE,MAAM,IAAI,cAAc,GAAG,OAAO,CAAC;gBACtD,IAAI,CAAC,IAAI,CAAC;oBACN,SAAS,EAAE,OAAO;oBAClB,aAAa,EAAE,CAAE,EAAC,MAAM,EAAE,IAAI,EAAC,CAAE;iBACpC,CAAC,CAAC;aACN;;;;;;QAGD,+BAAO;;;;YAAP,UAAQ,GAAG,IAAI,OAAO,OAAO,GAAG,CAAC,OAAO,IAAG,WAAW,CAAA,EAAE;;;;;;QAExD,+BAAO;;;;YAAP,UAAQ,GAAG,IAAI,OAAO,OAAO,GAAG,CAAC,OAAO,IAAG,WAAW,CAAA,EAAE;QAGxD,sBAAI,iCAAM;;;;gBAAV,cAAuB,OAAO,IAAI,CAAC,OAAO,CAAA,EAAE;;;;;gBAE5C,UAAW,EAAS;gBAApB,iBAgBC;gBAfG,IAAG,CAAC,EAAE,EAAE;;oBACJ,IAAI,CAAC,OAAO,GAAC,IAAI,CAAC;oBAClB,OAAO;iBACV;gBACD,IAAI,EAAE,CAAC,OAAO,CAAC,MAAM,CAAC,IAAE,CAAC,CAAE,EAAE;;oBACzB,IAAG,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,IAAI,EAAE;wBACrB,IAAI,CAAC,SAAS,EAAE,CAAC,SAAS,CAAE,UAAA,EAAE,IAAK,KAAI,CAAC,OAAO,GAAE,EAAE,CAAA,EAAE,CAAE,CAAC;qBAC3D;yBACI;wBAAE,IAAI,CAAC,OAAO,GAAE,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,IAAI,CAAA;qBAAE;iBAC7C;qBACI;;oBACD,IAAI,IAAI,GAAE,MAAM,CAAC,6GAA6G,CAAC,CAAA;oBAC/H,IAAG,EAAE,CAAC,OAAO,CAAC,UAAU,CAAC,IAAE,CAAC,CAAC,EAAE;wBAAE,EAAE,GAAE,EAAE,CAAC,KAAK,CAAC,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,GAAC,CAAC,CAAC,CAAA;qBAAE;oBAClE,IAAG,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE;wBAAE,IAAI,CAAC,OAAO,GAAE,aAAW,EAAI,CAAA;qBAAE;iBACtD;aACJ;;;WAlB2C;;;;;;QAwB5C,+BAAO;;;YAAP,cAAY,OAAO,IAAI,CAAC,MAAM,CAAC,cAAc,CAAC,CAAA,EAAE;;;;;QAGhD,iCAAS;;;YAAT,cAAc,OAAO,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAA,EAAE;;;;;;;QAG1C,+BAAO;;;;;YAAP,UAAQ,OAAc,EAAE,IAAW;gBAC/B,OAAO,IAAI,CAAC,MAAM,CAAI,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,SAAI,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,UAAO,CAAC,CAAC;aAC1F;;;;;;QAGD,8BAAM;;;;YAAN,UAAO,IAAW;;gBACd,IAAI,GAAG,GAAE,IAAI,CAAC,mBAAmB,EAAE,CAAC;gBACpC,IAAG,CAAC,GAAG,EAAE;oBAAE,OAAM;iBAAE;gBACnB,IAAG,IAAI,CAAC,CAAC,CAAC,IAAE,GAAG,EAAE;oBAAE,IAAI,GAAE,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAA;iBAAE;gBACxC,GAAG,IAAG,IAAI,CAAC;gBACX,IAAI,CAAC,KAAK,CAAC,YAAU,GAAK,CAAC,CAAC;gBAC5B,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;aAC7B;;;;;;;;;QAGD,8BAAM;;;;;;;YAAN,UAAO,OAAc,EAAE,IAAW,EAAE,GAAO,EAAE,KAAS;;gBAClD,IAAI,GAAG,GAAE,IAAI,CAAC,mBAAmB,EAAE,CAAC;gBACpC,IAAG,CAAC,GAAG,EAAE;oBAAE,OAAM;iBAAE;gBACnB,IAAG,IAAI,CAAC,CAAC,CAAC,IAAE,GAAG,EAAE;oBAAE,IAAI,GAAE,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAA;iBAAE;gBACxC,GAAG,IAAG,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,GAAG,GAAG,GAAG,IAAI,CAAC;;gBAE/C,IAAI,GAAG,GAAG,EAAE,KAAK,EAAE,EAAE,EAAE,CAAA;gBACvB,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,GAAE,KAAK,CAAC;gBAEtB,IAAI,CAAC,KAAK,CAAC,YAAU,GAAK,CAAC,CAAC;gBAC5B,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,CAAC;gBAChC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;aAClC;;;;;QAGO,2BAAG;;;;sBAAC,IAAW;;gBACnB,IAAI,GAAG,GAAK,IAAI,CAAC,QAAQ,WAAM,IAAI,CAAC,QAAQ,SAAI,IAAI,CAAC,IAAI,GAAG,IAAM,CAAC;gBACnE,IAAI,CAAC,KAAK,CAAC,SAAO,GAAK,CAAC,CAAC;gBACzB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;;;;;QAItB,2CAAmB;;;;;gBACvB,IAAI,GAAG,CAAC;gBACR,IAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE;;;oBAErC,IAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,cAAc,CAAC,EAAE;wBACrD,GAAG,GAAE,KAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,cAAc,CAAG,CAAC;qBAClE;yBACI;wBAAE,GAAG,GAAE,KAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,cAAc,CAAG,CAAA;qBAAE;iBACjE;qBACI;;oBACD,IAAI,GAAG,GAAE,uFAAuF,CAAA;oBAChG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;oBAChB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,KAAK,CAAC,GAAG,CAAC,CAAE,CAAC;iBACrC;gBACD,OAAO,GAAG,CAAC;;;;;;QAIP,qCAAa;;;;sBAAC,OAAc;;gBAChC,IAAI,GAAG,GAAE,CAAC,OAAO,IAAE,MAAM,IAAK,cAAc,GAAE,OAAO,CAAC;gBACtD,OAAO,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;;;oBAxUvCC,aAAU,SAAC;wBACV,UAAU,EAAE,MAAM;qBACnB;;;;;wBALQC,aAAU;;;;4BADnB;;;;;;;;;;;;;;;;;;;;;;;"}
