{"version":3,"file":"signalk-client-angular.js.map","sources":["ng://signalk-client-angular/lib/utils.ts","ng://signalk-client-angular/lib/http-api.ts","ng://signalk-client-angular/lib/stream-api.ts","ng://signalk-client-angular/lib/stream-worker.ts","ng://signalk-client-angular/lib/signalk-client.ts","ng://signalk-client-angular/lib/signalk-client.module.ts"],"sourcesContent":["// ** Path utilities\r\nexport class Path {\r\n\r\n    // ** transform dot notation to slash\r\n    static dotToSlash(path:string):string {\r\n        if(path.indexOf('.')!=-1) { return path.split('.').join('/') }\r\n        else { return path }\r\n    }\r\n\r\n    // ** parse context to valid Signal K path\r\n    static contextToPath(context:string):string {\r\n        let res= (context=='self' ) ? 'vessels.self': context;\r\n        return res.split('.').join('/');\r\n    }    \r\n\r\n}\r\n\r\n// ** Message templates **\r\nexport class Message {\r\n   \r\n    // ** return UPDATES message object\r\n    static updates() { \r\n        // array values= { values: [ {path: xx, value: xx } ] }\r\n        return { \r\n            context: null,\r\n            updates: [] \r\n        }\r\n    }\r\n    // ** return SUBSCRIBE message object\r\n    static subscribe() { \r\n        /* array values= {\r\n            \"path\": \"path.to.key\",\r\n            \"period\": 1000,\r\n            \"format\": \"delta\",\r\n            \"policy\": \"ideal\",\r\n            \"minPeriod\": 200\r\n            } */\r\n        return { \r\n            context: null,\r\n            subscribe: [] \r\n        }\r\n    }    \r\n    // ** return UNSUBSCRIBE message object\r\n    static unsubscribe() { \r\n        // array values= { \"path\": \"path.to.key\" }\r\n        return { \r\n            context: null,\r\n            unsubscribe: [] \r\n        }\r\n    }  \r\n    // ** return REQUEST message object\r\n    static request() { \r\n        return { \r\n            requestId: null\r\n        }\r\n    }           \r\n\r\n}\r\n\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Path } from './utils';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class SignalKHttp {\r\n\r\n    private _token: string;\r\n\r\n    // **************** ATTRIBUTES ***************************\r\n\r\n    public endpoint: string;\r\n    // ** set auth token value **\r\n    set token(val:string) { this._token= val }    \r\n\r\n    // *******************************************************\r\n\r\n    constructor( private http: HttpClient ) { }   \r\n    \r\n    // ** get the contents of the Signal K tree pointed to by self. returns: Observable \r\n    getSelf() { return this.get(`vessels/self`) }\r\n\r\n    //** get ID of vessel self via http. returns: Observable \r\n    getSelfId() { return this.get(`self`) }\r\n\r\n    // ** return observable response for meta object at the specified context and path\r\n    getMeta(context:string, path:string) { \r\n        return this.get(`${Path.contextToPath(context)}/${Path.dotToSlash(path)}/meta`);\r\n    }    \r\n\r\n    //** get API path value via http. returns: Observable \r\n    get(path:string) { \r\n        if(!this.endpoint) { return }\r\n        if(path[0]=='/') { path= path.slice(1) }\r\n        let url= this.endpoint + Path.dotToSlash(path);\r\n        if(this._token) {\r\n            let headers= new HttpHeaders( { 'Authorization': `JWT ${this._token}` } );\r\n            return this.http.get( url, { headers: headers } );\r\n        }\r\n        else { return this.http.get(url) }\r\n    }\r\n\r\n    //** send value to API path via http put. returns: Observable \r\n\tput(context:string, path:string, value:any);\r\n\tput(context:string, path:string, key:any, value:any);\r\n    put(context:string, path:string, key?:any, value?:any) { \r\n        if(!this.endpoint) { return }\r\n        if(path[0]=='/') { path= path.slice(1) }\r\n        let url= this.endpoint + Path.contextToPath(context) + '/' + Path.dotToSlash(path);\r\n        let msg = { value: {} } \r\n        if(typeof value=='undefined') { msg.value= key }\r\n\t\telse { msg.value[key]= value }\r\n\r\n        if(this._token) {\r\n            let headers= new HttpHeaders( { 'Authorization': `JWT ${this._token}` } );\r\n            return this.http.put(url, msg, { headers: headers } );\r\n        }        \r\n        else { return this.http.put(url, msg) }\r\n    } \r\n\r\n}","import { Injectable } from '@angular/core';\r\nimport { Subject, Observable } from 'rxjs';\r\nimport { Message } from './utils';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class SignalKStream {\r\n\r\n\tprivate _connect: Subject<any>;\r\n    private _close: Subject<any>;\r\n\tprivate _error: Subject<any>;\r\n\tprivate _message: Subject<any>;\r\n\r\n    private ws: any;    \r\n    private _filter= null;               // ** id of vessel to filter delta messages\r\n    private _wsTimeout= 20000;           // ** websocket connection timeout  \r\n    private _token: string;  \r\n    \r\n   // **************** ATTRIBUTES ***************************\r\n\r\n    public onConnect: Observable<any>;\t\t\r\n    public onClose: Observable<any>;\t\r\n    public onError: Observable<any>; \t\r\n    public onMessage: Observable<any>;\r\n\r\n    public endpoint: string;\r\n    public selfId: string;\r\n\r\n    // ** set auth token value **\r\n    set token(val:string) { this._token= val }    \r\n    // ** get / set websocket connection timeout 3000<=timeout<=60000 **\r\n    get connectionTimeout():number { return this._wsTimeout }\r\n    set connectionTimeout(val:number) {\r\n        this._wsTimeout= (val<3000) ? 3000 : (val>60000) ? 60000 : val;\r\n    }   \r\n    // ** is WS Stream connected?\r\n    get isOpen():boolean { \r\n        return (this.ws && (this.ws.readyState!=1 && this.ws.readyState!=3) ) ? true : false;\r\n    }  \r\n    // ** get / set filter to select delta messages just for supplied vessel id   \r\n    get filter():string { return this._filter }\r\n    // ** set filter= null to remove message filtering\r\n    set filter(id:string) { \r\n        if( id && id.indexOf('self')!=-1 ) {  // ** self\r\n            this._filter= (this.selfId) ? this.selfId : null;\r\n        }\r\n        else { this._filter= id }\r\n    }    \r\n\r\n    // ******************************************************\r\n\r\n    constructor( ) { \r\n        this._connect= new Subject<any>();\r\n        this.onConnect= this._connect.asObservable();   \r\n        this._close= new Subject<any>();\r\n        this.onClose= this._close.asObservable();  \r\n        this._error= new Subject<any>();\r\n        this.onError= this._error.asObservable();  \r\n        this._message= new Subject<any>();\r\n        this.onMessage= this._message.asObservable();         \r\n    }   \r\n\r\n    // ** Close WebSocket connection\r\n    close() { if(this.ws) { this.ws.close(); this.ws= null; } }\r\n   \r\n\t// ** Open a WebSocket at provided url\r\n\topen(url:string, subscribe?:string, token?:string) {\r\n        url= (url) ? url : this.endpoint;\r\n        if(!url) { return }\r\n        let q= (url.indexOf('?')==-1) ? '?' : '&'\r\n        if(subscribe) { url+=`${q}subscribe=${subscribe}` } \r\n        if(this._token || token) { url+= `${(subscribe) ? '&' : '?'}token=${this._token || token}` } \r\n        \r\n        this.close();\r\n        this.ws = new WebSocket(url);\r\n        // ** start connection watchdog **\r\n        setTimeout( \r\n            ()=>{\r\n                if(this.ws && (this.ws.readyState!=1 && this.ws.readyState!=3) ) { \r\n                    console.warn(`Connection watchdog expired (${this._wsTimeout/1000} sec): ${this.ws.readyState}... aborting connection...`);\r\n                    this.close(); \r\n                }\r\n            }, this._wsTimeout\r\n        );\r\n\t\t\r\n\t\tthis.ws.onopen= e=> { this._connect.next(e) }\r\n\t\tthis.ws.onclose= e=> { this._close.next(e) }\r\n\t\tthis.ws.onerror= e=> { this._error.next(e) }\r\n\t\tthis.ws.onmessage= e=> {\r\n            let data: any;\r\n            if(typeof e.data === 'string') {\r\n                try { data= JSON.parse(e.data) }\r\n                catch(e) { return }\r\n            }\r\n            if(this.isHello(data)) { \r\n                this.selfId= data.self;\r\n                this._message.next(data);\r\n            }          \r\n            else if(this._filter && this.isDelta(data)) {\r\n                if(data.context== this._filter) { this._message.next(data) } \r\n            }                \r\n            else { this._message.next(data) } \r\n\t\t}\r\n    }      \r\n\r\n    // ** send data to Signal K stream\r\n    send(data:any) {\r\n        if(this.ws) {\r\n            if(typeof data === 'object') { data= JSON.stringify(data) }\r\n            this.ws.send(data);\r\n        }\r\n    }\r\n\r\n    // ** send value(s) via delta stream update **\r\n    sendUpdate(context:string, path:any)\r\n    sendUpdate(context:string='self', path:any, value?:any) {\r\n        let val= Message.updates();\r\n        val.context= (context=='self') ? 'vessels.self' : context;\r\n        if(this._token) { val['token']= this._token }\r\n\r\n        let uValues= [];\r\n        if(typeof path === 'string') {\r\n            uValues.push({ path: path, value: value });\r\n        }\r\n        if(typeof path === 'object' && Array.isArray(path) ) {\r\n            uValues= path;\r\n        }\r\n        val.updates.push({ values: uValues } ); \r\n        this.send(val);\r\n    }\r\n\r\n    // ** Subscribe to Delta stream messages options: {..}**\r\n    subscribe(context:string, path:any);\r\n    subscribe(context:string='*', path:any='*', options?:any) {\r\n        let val= Message.subscribe();\r\n        val.context= (context=='self') ? 'vessels.self' : context;\r\n        if(this._token) { val['token']= this._token }\r\n\r\n        if(typeof path === 'object' && Array.isArray(path) ) {\r\n           val.subscribe= path;\r\n        }\r\n        if(typeof path === 'string') {\r\n            let sValue= {};\r\n            sValue['path']= path;\r\n            if(options && typeof options === 'object') {\r\n                if(options['period']) { sValue['period']= options['period'] }\r\n                if(options['minPeriod']) { sValue['minPeriod']= options['period'] }\r\n                if(options['format'] && \r\n                    (options['format']=='delta' || options['format']=='full') ) { \r\n                        sValue['format']= options['format'];\r\n                }\r\n                if(options['policy'] && \r\n                    (options['policy']=='instant' || options['policy']=='ideal'\r\n                    || options['policy']=='fixed') ) { \r\n                        sValue['policy']= options['policy'];\r\n                }\r\n            }\r\n            val.subscribe.push(sValue);\r\n        }\r\n        this.send(val);        \r\n    }\r\n\r\n    // ** Unsubscribe from Delta stream messages **\r\n    unsubscribe(context:string='*', path:any='*') {\r\n        let val= Message.unsubscribe();\r\n        val.context= (context=='self') ? 'vessels.self' : context;\r\n        if(this._token) { val['token']= this._token }\r\n\r\n        if(typeof path === 'object' && Array.isArray(path) ) {\r\n           val.unsubscribe= path;\r\n        }\r\n        if(typeof path === 'string') { val.unsubscribe.push({path: path}) }\r\n        this.send(val); \r\n    }\r\n\r\n    // *************** MESSAGE PARSING ******************************\r\n    // ** returns true if message context is 'self'\r\n    isSelf(msg:any):boolean { return (msg.context== this.selfId) }\r\n    // ** returns true if message is a Delta message\r\n    isDelta(msg:any):boolean { return typeof msg.context!= 'undefined' }\r\n    // ** returns true if message is a Hello message\r\n    isHello(msg:any):boolean { return typeof msg.version!= 'undefined' }\r\n    // ** returns true if message is a request Response message\r\n    isResponse(msg:any):boolean { return typeof msg.requestId!= 'undefined' } \r\n\r\n}","/** Web Worker Service\r\n * ************************************/\r\nimport { Injectable } from '@angular/core';\r\nimport { Subject, Observable } from 'rxjs';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class SignalKStreamWorker  {\r\n\r\n\tprivate _error: Subject<any>;\r\n\tprivate _message: Subject<any>;\r\n    private worker: Worker;\r\n    \r\n   // **************** ATTRIBUTES ***************************\r\n\t\r\n    public onError: Observable<any>; \t\r\n    public onMessage: Observable<any>;\t\r\n\r\n   // *******************************************************    \r\n\r\n    constructor() {\r\n        this._error= new Subject<string>();\r\n        this.onError= this._error.asObservable();  \r\n        this._message= new Subject<string>();\r\n        this.onMessage= this._message.asObservable();   \r\n    } \r\n\r\n    ngOnDestroy() { this.worker.terminate(); this.worker = undefined; }\r\n\r\n    // ** Initialise worker\r\n    init(pathToFile:string) { \r\n        if(typeof(Worker)== \"undefined\") { return false }\r\n        if(this.worker) { this.worker.terminate() }   // ** terminate an open worker\r\n\r\n        this.worker= new Worker(pathToFile);\r\n        this.worker.onmessage= event=> { this._message.next(event) };\r\n        this.worker.onerror= event=> { this._error.next(event) };           \r\n        // ** worker ready for postMessage()\r\n    }    \r\n    \r\n    // ** Send message to worker\r\n    postMessage(msg:any) { if(this.worker) {this.worker.postMessage(msg) } }\r\n\r\n    // ** terminate worker\r\n    terminate() { if(this.worker) {this.worker.terminate()} }\r\n}","import { Injectable, isDevMode } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\nimport { SignalKHttp } from './http-api';\nimport { SignalKStream } from './stream-api';\nimport { Path, Message } from './utils';\nimport { SignalKStreamWorker} from './stream-worker';\n\n@Injectable({ providedIn: 'root' })\nexport class SignalKClient {\n    \n    private hostname: string;\n    private port: number;\n    private protocol: string;\n  \n    private _version: string= 'v1';      // ** default Signal K api version\n    private _token: string;             // token for when security is enabled on the server\n\n    private debug(val: any) { if(isDevMode()){ console.log(val) } }\n    \n    // **************** ATTRIBUTES ***************************\n\n    // ** server information block **\n    public server= {\n        endpoints: {},\n        info: {},\n        apiVersions: []\n    }    \n    // ** get / set Signal K preferred api version to use **\n    get version():number { return parseInt( this._version.slice(1) ) }\n    set version(val: number) {\n        let v:string= 'v'+ val;\n        if(this.server.apiVersions.length==0) { \n            this._version= v;\n            this.debug(`Signal K api version set to: ${v}`);\n        }\n        else {\n            this._version= (this.server.apiVersions.indexOf(v)!=-1) ? v : this._version;\n            this.debug(`Signal K api version set request: ${v}, result: ${this._version}`);\n        }\n    }\n    // ** set auth token value **\n    set authToken(val:string) { \n        this._token= val;\n        this.api.token= val;\n        this.stream.token= val;\n    }    \n    // ** Message Object\n    get message() { return Message }\n\n    // *******************************************************\n    constructor( private http: HttpClient, \n                public api: SignalKHttp, \n                public stream: SignalKStream,\n                public worker: SignalKStreamWorker ) { \n        this.init();                          \n    }\n\n    ngOnDestroy() { this.stream.close() }   \n    \n    // ** initialise protocol, hostname, port values\n    private init(hostname:string='localhost', port:number=null, useSSL:boolean=false) {\n        this.hostname = hostname;\n        if(useSSL) {\n            this.protocol = 'https';\n            this.port = port || 443;\n        } \n        else {\n            this.protocol = 'http';\n            this.port = port || 80;\n        }        \n    }    \n\n    // **************** CONNECTION AND DISCOVERY  ********************\n\n    // ** Signal K server endpoint discovery request (/signalk).  \n    hello(hostname:string=null, port:number=null, useSSL:boolean=false) {\n        this.init(hostname, port, useSSL);\n        return this.get('/signalk');\n    }    \n    // ** connect to server (endpoint discovery) and DO NOT open Stream\n    connect(hostname:string=null, port:number=null, useSSL:boolean=false): Promise<any> {\n        return new Promise( (resolve, reject)=> {\n            this.debug('Contacting Signal K server.........');\n            this.hello(hostname, port, useSSL).subscribe(    // ** discover endpoints **\n                response=> { \n                    if(this.stream) { this.stream.close() }\n                    this.processHello(response);\n                    this.api.endpoint= this.resolveHttpEndpoint();\n                    this.stream.endpoint= this.resolveStreamEndpoint();\n                    resolve(true);\n                },\n                error=> { \n                    this.disconnectedFromServer();       \n                    reject(error);\n                }\n            );\n        });\n    }    \n\n    // ** disconnect from server\n    disconnect() { this.stream.close(); this.worker.terminate(); }\n    \n    // ** Connect + open Delta Stream (endpoint discovery)\n    connectStream(hostname:string=null, port:number=null, useSSL:boolean=false, subscribe:string=null) {\n        return new Promise( (resolve, reject)=> {\n            this.connect(hostname, port, useSSL)\n            .then( ()=> { \n                // ** connect to stream api at preferred version else fall back to default version\n                let url= this.resolveStreamEndpoint();\n                if(!url) { \n                    reject( new Error('Server has no advertised Stream endpoints!') );\n                    return;\n                }\n                this.stream.open(url, subscribe);\n                resolve( true );\n            })\n            .catch( e=> { reject( e ) });\n        });\n    } \n\n    // ** connect to playback stream (endpoint discovery)\n    connectPlayback(hostname:string=null, port:number=null, useSSL:boolean=false, options:any) {\n        return new Promise( (resolve, reject)=> {\n            this.connect(hostname, port, useSSL)\n            .then( ()=> { \n                // ** connect to playback api at preferred version else fall back to default version\n                this.openPlayback(null, options, this._token);\n                resolve( true );\n            })\n            .catch( e=> { reject( e ) });\n        })\n    }      \n\n    // ** connect to delta stream with (NO endpoint discovery)\n    openStream(url:string=null, subscribe?:string, token?:string) {\n        this.debug('openStream.........');  \n        if(!url) {     // connect to stream api at discovered endpoint\n            url= this.resolveStreamEndpoint();\n            if(!url) { \n                return( new Error('Server has no advertised Stream endpoints!') );\n            }\n        }\n        this.stream.open(url, subscribe, token);  \n        return true;      \n    }   \n\n    // ** connect to playback stream (NO endpoint discovery)\n    openPlayback(url:string=null, options?:any, token?:string) {\n        this.debug('openPlayback.........');\n        if(!url) {     // connect to stream api at discovered endpoint\n            url= this.resolveStreamEndpoint();\n            if(!url) { \n                return( new Error('Server has no advertised Stream endpoints!') );\n            }\n            url= url.replace('stream', 'playback');\n        }        \n        let pb= '';\n        let subscribe: string;\n        if(options && typeof options ==='object'){\n            pb+= (options.startTime) ? '?startTime=' + options.startTime.slice(0,options.startTime.indexOf('.')) + 'Z' : '';\n            pb+= (options.playbackRate) ? `&playbackRate=${options.playbackRate}` : '';\n            subscribe= (options.subscribe) ? options.subscribe : null;            \n        }\n        this.stream.open(url + pb, subscribe, token); \n        return true;\n    }      \n\n    // ** process Hello response \n    private processHello(response: any) {\n        this.server.endpoints= (response['endpoints']) ? response['endpoints'] : {};\n        this.server.info= (response['server']) ? response['server'] : {};\n        this.server.apiVersions= (this.server.endpoints) ? Object.keys(this.server.endpoints) : [];\n        this.debug(this.server.endpoints);\n    }\n\n    // ** return preferred WS stream url\n    public resolveStreamEndpoint():string {\n        if(this.server.endpoints[this._version] && this.server.endpoints[this._version]['signalk-ws']) {\n            this.debug(`Connecting endpoint version: ${this._version}`);\n            return `${this.server.endpoints[this._version]['signalk-ws']}`;\n        }\n        else if(this.server.endpoints['v1'] && this.server.endpoints['v1']['signalk-ws']) { \n            this.debug(`Connection falling back to: v1`);\n            return `${this.server.endpoints['v1']['signalk-ws']}` \n        }\n        else { return null }\n    }  \n\n    // ** return signalk-http endpoint url\n    private resolveHttpEndpoint():string {\n        let url: string;\n        if(this.server.endpoints[this._version]) { // ** connection made\n            // ** connect to http endpoint at prescribed version else fall back to default version\n            if(this.server.endpoints[this._version]['signalk-http']) {\n                url= `${this.server.endpoints[this._version]['signalk-http']}`;\n            }\n            else { url= `${this.server.endpoints['v1']['signalk-http']}` }   \n        } \n        else {\n            let msg= 'No current connection http endpoint service! Use connect() to establish a connection.'\n            this.debug(msg);\n        } \n        return url;   \n    }    \n    \n    // ** cleanup on server disconnection\n    private disconnectedFromServer() {\n        this.server.endpoints= {};\n        this.server.info= {};\n        this.server.apiVersions= [];  \n    }\n\n    //** return observable response from http path\n    get(path:string) { \n        let url= `${this.protocol}://${this.hostname}:${this.port}${Path.dotToSlash(path)}`;\n        this.debug(`get ${url}`);\n        if(this._token) {\n            let headers= new HttpHeaders( { 'Authorization': `JWT ${this._token}` } );\n            return this.http.get( url, { headers: headers } );\n        }\n        else { return this.http.get(url) }        \n    };  \n\n    //** return observable response for put to http path\n    put(path:string, value:any) { \n        let url= `${this.protocol}://${this.hostname}:${this.port}${Path.dotToSlash(path)}`;\n        this.debug(`put ${url}`);\n        if(this._token) {\n            let headers= new HttpHeaders( { 'Authorization': `JWT ${this._token}` } );\n            return this.http.put( url, { headers: headers } );\n        }\n        else { return this.http.put(url, value) }        \n    };\n\n    //** return observable response for post to http path\n    post(path:string, value:any) { \n        let url= `${this.protocol}://${this.hostname}:${this.port}${Path.dotToSlash(path)}`;\n        this.debug(`post ${url}`);\n        if(this._token) {\n            let headers= new HttpHeaders( { 'Authorization': `JWT ${this._token}` } );\n            return this.http.post( url, { headers: headers } );\n        }\n        else { return this.http.post(url, value) }        \n    };   \n\n    // ** get auth token for supplied user details **\n    login(username:string, password:string) {\n        let headers= new HttpHeaders().set('Content-Type', `application/json`);\n        return this.http.post(\n            `${this.protocol}://${this.hostname}:${this.port}/signalk/${this._version}/auth/login`,\n            { \"username\": username, \"password\": password },\n            { headers }\n        );\n    }\n\t\n    // ** logout from server **\n    logout() {\n\t\tlet url=`${this.protocol}://${this.hostname}:${this.port}/signalk/${this._version}/auth/logout`;\n        if(this._token) {\n            let headers= new HttpHeaders( { 'Authorization': `JWT ${this._token}` } );\n            return this.http.put( url, null, { headers } );\n        }        \n        else { return this.http.put( url, null ) }\n    }\t   \n    \n    //** get data via the snapshot http api path for supplied time\n    snapshot(context:string, time:string) { \n        if(!time) { return }\n        time= time.slice(0,time.indexOf('.')) + 'Z';\n        let url= this.resolveHttpEndpoint();\n        if(!url) { return }\n        url= `${url.replace('api','snapshot')}${Path.contextToPath(context)}?time=${time}`;\n        if(this._token) {\n            let headers= new HttpHeaders( { 'Authorization': `JWT ${this._token}` } );\n            return this.http.get( url, { headers: headers } );\n        }\n        else { return this.http.get(url) }\n    }\n\n}\n","/*****************************\r\n * SignalKClient Module:\r\n *****************************/\r\n\r\nimport { NgModule } from '@angular/core';\r\nimport { HttpClientModule} from '@angular/common/http';\r\n\r\n@NgModule({\r\n    imports: [ HttpClientModule ],    \r\n    declarations: [],\r\n    exports: [],\r\n    entryComponents: [], \r\n    providers: []  \r\n})\r\nexport class SignalKClientModule {}\r\n\r\nexport * from './signalk-client';"],"names":[],"mappings":";;;;;;;;;AACA,MAAa,IAAI;;;;;;IAGb,OAAO,UAAU,CAAC,IAAW;QACzB,IAAG,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,IAAE,CAAC,CAAC,EAAE;YAAE,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAA;SAAE;aACzD;YAAE,OAAO,IAAI,CAAA;SAAE;KACvB;;;;;;IAGD,OAAO,aAAa,CAAC,OAAc;;YAC3B,GAAG,GAAE,CAAC,OAAO,IAAE,MAAM,IAAK,cAAc,GAAE,OAAO;QACrD,OAAO,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;KACnC;CAEJ;;AAGD,MAAa,OAAO;;;;;IAGhB,OAAO,OAAO;;QAEV,OAAO;YACH,OAAO,EAAE,IAAI;YACb,OAAO,EAAE,EAAE;SACd,CAAA;KACJ;;;;;IAED,OAAO,SAAS;;;;;;;;QAQZ,OAAO;YACH,OAAO,EAAE,IAAI;YACb,SAAS,EAAE,EAAE;SAChB,CAAA;KACJ;;;;;IAED,OAAO,WAAW;;QAEd,OAAO;YACH,OAAO,EAAE,IAAI;YACb,WAAW,EAAE,EAAE;SAClB,CAAA;KACJ;;;;;IAED,OAAO,OAAO;QACV,OAAO;YACH,SAAS,EAAE,IAAI;SAClB,CAAA;KACJ;CAEJ;;;;;;ACzDD,MAKa,WAAW;;;;;IAYpB,YAAqB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;KAAM;;;;;;IAJ3C,IAAI,KAAK,CAAC,GAAU,IAAI,IAAI,CAAC,MAAM,GAAE,GAAG,CAAA,EAAE;;;;;IAO1C,OAAO,KAAK,OAAO,IAAI,CAAC,GAAG,CAAC,cAAc,CAAC,CAAA,EAAE;;;;;IAG7C,SAAS,KAAK,OAAO,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,CAAA,EAAE;;;;;;;IAGvC,OAAO,CAAC,OAAc,EAAE,IAAW;QAC/B,OAAO,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,IAAI,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;KACnF;;;;;;IAGD,GAAG,CAAC,IAAW;QACX,IAAG,CAAC,IAAI,CAAC,QAAQ,EAAE;YAAE,OAAM;SAAE;QAC7B,IAAG,IAAI,CAAC,CAAC,CAAC,IAAE,GAAG,EAAE;YAAE,IAAI,GAAE,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAA;SAAE;;YACpC,GAAG,GAAE,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC;QAC9C,IAAG,IAAI,CAAC,MAAM,EAAE;;gBACR,OAAO,GAAE,IAAI,WAAW,CAAE,EAAE,eAAe,EAAE,OAAO,IAAI,CAAC,MAAM,EAAE,EAAE,CAAE;YACzE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAE,GAAG,EAAE,EAAE,OAAO,EAAE,OAAO,EAAE,CAAE,CAAC;SACrD;aACI;YAAE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAA;SAAE;KACrC;;;;;;;;IAKD,GAAG,CAAC,OAAc,EAAE,IAAW,EAAE,GAAQ,EAAE,KAAU;QACjD,IAAG,CAAC,IAAI,CAAC,QAAQ,EAAE;YAAE,OAAM;SAAE;QAC7B,IAAG,IAAI,CAAC,CAAC,CAAC,IAAE,GAAG,EAAE;YAAE,IAAI,GAAE,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAA;SAAE;;YACpC,GAAG,GAAE,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,GAAG,GAAG,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC;;YAC9E,GAAG,GAAG,EAAE,KAAK,EAAE,EAAE,EAAE;QACvB,IAAG,OAAO,KAAK,IAAE,WAAW,EAAE;YAAE,GAAG,CAAC,KAAK,GAAE,GAAG,CAAA;SAAE;aACjD;YAAE,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,GAAE,KAAK,CAAA;SAAE;QAExB,IAAG,IAAI,CAAC,MAAM,EAAE;;gBACR,OAAO,GAAE,IAAI,WAAW,CAAE,EAAE,eAAe,EAAE,OAAO,IAAI,CAAC,MAAM,EAAE,EAAE,CAAE;YACzE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,EAAE,OAAO,EAAE,OAAO,EAAE,CAAE,CAAC;SACzD;aACI;YAAE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC,CAAA;SAAE;KAC1C;;;YAtDJ,UAAU,SAAC,EAAE,UAAU,EAAE,MAAM,EAAE;;;;YAHzB,UAAU;;;;;;;;ACDnB,MAKa,aAAa;;IA6CtB;QArCQ,YAAO,GAAE,IAAI,CAAC;;QACd,eAAU,GAAE,KAAK,CAAC;QAqCtB,IAAI,CAAC,QAAQ,GAAE,IAAI,OAAO,EAAO,CAAC;QAClC,IAAI,CAAC,SAAS,GAAE,IAAI,CAAC,QAAQ,CAAC,YAAY,EAAE,CAAC;QAC7C,IAAI,CAAC,MAAM,GAAE,IAAI,OAAO,EAAO,CAAC;QAChC,IAAI,CAAC,OAAO,GAAE,IAAI,CAAC,MAAM,CAAC,YAAY,EAAE,CAAC;QACzC,IAAI,CAAC,MAAM,GAAE,IAAI,OAAO,EAAO,CAAC;QAChC,IAAI,CAAC,OAAO,GAAE,IAAI,CAAC,MAAM,CAAC,YAAY,EAAE,CAAC;QACzC,IAAI,CAAC,QAAQ,GAAE,IAAI,OAAO,EAAO,CAAC;QAClC,IAAI,CAAC,SAAS,GAAE,IAAI,CAAC,QAAQ,CAAC,YAAY,EAAE,CAAC;KAChD;;;;;;IA/BD,IAAI,KAAK,CAAC,GAAU,IAAI,IAAI,CAAC,MAAM,GAAE,GAAG,CAAA,EAAE;;;;;IAE1C,IAAI,iBAAiB,KAAY,OAAO,IAAI,CAAC,UAAU,CAAA,EAAE;;;;;IACzD,IAAI,iBAAiB,CAAC,GAAU;QAC5B,IAAI,CAAC,UAAU,GAAE,CAAC,GAAG,GAAC,IAAI,IAAI,IAAI,GAAG,CAAC,GAAG,GAAC,KAAK,IAAI,KAAK,GAAG,GAAG,CAAC;KAClE;;;;;IAED,IAAI,MAAM;QACN,OAAO,CAAC,IAAI,CAAC,EAAE,KAAK,IAAI,CAAC,EAAE,CAAC,UAAU,IAAE,CAAC,IAAI,IAAI,CAAC,EAAE,CAAC,UAAU,IAAE,CAAC,CAAC,IAAK,IAAI,GAAG,KAAK,CAAC;KACxF;;;;;IAED,IAAI,MAAM,KAAY,OAAO,IAAI,CAAC,OAAO,CAAA,EAAE;;;;;;IAE3C,IAAI,MAAM,CAAC,EAAS;QAChB,IAAI,EAAE,IAAI,EAAE,CAAC,OAAO,CAAC,MAAM,CAAC,IAAE,CAAC,CAAC,EAAG;YAC/B,IAAI,CAAC,OAAO,GAAE,CAAC,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;SACpD;aACI;YAAE,IAAI,CAAC,OAAO,GAAE,EAAE,CAAA;SAAE;KAC5B;;;;;IAgBD,KAAK,KAAK,IAAG,IAAI,CAAC,EAAE,EAAE;QAAE,IAAI,CAAC,EAAE,CAAC,KAAK,EAAE,CAAC;QAAC,IAAI,CAAC,EAAE,GAAE,IAAI,CAAC;KAAE,EAAE;;;;;;;;IAG9D,IAAI,CAAC,GAAU,EAAE,SAAiB,EAAE,KAAa;QAC1C,GAAG,GAAE,CAAC,GAAG,IAAI,GAAG,GAAG,IAAI,CAAC,QAAQ,CAAC;QACjC,IAAG,CAAC,GAAG,EAAE;YAAE,OAAM;SAAE;;YACf,CAAC,GAAE,CAAC,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,IAAE,CAAC,CAAC,IAAI,GAAG,GAAG,GAAG;QACzC,IAAG,SAAS,EAAE;YAAE,GAAG,IAAE,GAAG,CAAC,aAAa,SAAS,EAAE,CAAA;SAAE;QACnD,IAAG,IAAI,CAAC,MAAM,IAAI,KAAK,EAAE;YAAE,GAAG,IAAG,GAAG,CAAC,SAAS,IAAI,GAAG,GAAG,GAAG,SAAS,IAAI,CAAC,MAAM,IAAI,KAAK,EAAE,CAAA;SAAE;QAE5F,IAAI,CAAC,KAAK,EAAE,CAAC;QACb,IAAI,CAAC,EAAE,GAAG,IAAI,SAAS,CAAC,GAAG,CAAC,CAAC;;QAE7B,UAAU,CACN;YACI,IAAG,IAAI,CAAC,EAAE,KAAK,IAAI,CAAC,EAAE,CAAC,UAAU,IAAE,CAAC,IAAI,IAAI,CAAC,EAAE,CAAC,UAAU,IAAE,CAAC,CAAC,EAAG;gBAC7D,OAAO,CAAC,IAAI,CAAC,gCAAgC,IAAI,CAAC,UAAU,GAAC,IAAI,UAAU,IAAI,CAAC,EAAE,CAAC,UAAU,4BAA4B,CAAC,CAAC;gBAC3H,IAAI,CAAC,KAAK,EAAE,CAAC;aAChB;SACJ,EAAE,IAAI,CAAC,UAAU,CACrB,CAAC;QAER,IAAI,CAAC,EAAE,CAAC,MAAM,GAAE,CAAC,MAAK,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,CAAA,EAAE,CAAA;QAC7C,IAAI,CAAC,EAAE,CAAC,OAAO,GAAE,CAAC,MAAK,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAA,EAAE,CAAA;QAC5C,IAAI,CAAC,EAAE,CAAC,OAAO,GAAE,CAAC,MAAK,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAA,EAAE,CAAA;QAC5C,IAAI,CAAC,EAAE,CAAC,SAAS,GAAE,CAAC;;gBACN,IAAS;YACb,IAAG,OAAO,CAAC,CAAC,IAAI,KAAK,QAAQ,EAAE;gBAC3B,IAAI;oBAAE,IAAI,GAAE,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,CAAA;iBAAE;gBAChC,OAAM,CAAC,EAAE;oBAAE,OAAM;iBAAE;aACtB;YACD,IAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE;gBACnB,IAAI,CAAC,MAAM,GAAE,IAAI,CAAC,IAAI,CAAC;gBACvB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;aAC5B;iBACI,IAAG,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE;gBACxC,IAAG,IAAI,CAAC,OAAO,IAAG,IAAI,CAAC,OAAO,EAAE;oBAAE,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAA;iBAAE;aAC/D;iBACI;gBAAE,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAA;aAAE;SAC1C,CAAA;KACE;;;;;;IAGD,IAAI,CAAC,IAAQ;QACT,IAAG,IAAI,CAAC,EAAE,EAAE;YACR,IAAG,OAAO,IAAI,KAAK,QAAQ,EAAE;gBAAE,IAAI,GAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAA;aAAE;YAC3D,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;SACtB;KACJ;;;;;;;IAID,UAAU,CAAC,UAAe,MAAM,EAAE,IAAQ,EAAE,KAAU;;YAC9C,GAAG,GAAE,OAAO,CAAC,OAAO,EAAE;QAC1B,GAAG,CAAC,OAAO,GAAE,CAAC,OAAO,IAAE,MAAM,IAAI,cAAc,GAAG,OAAO,CAAC;QAC1D,IAAG,IAAI,CAAC,MAAM,EAAE;YAAE,GAAG,CAAC,OAAO,CAAC,GAAE,IAAI,CAAC,MAAM,CAAA;SAAE;;YAEzC,OAAO,GAAE,EAAE;QACf,IAAG,OAAO,IAAI,KAAK,QAAQ,EAAE;YACzB,OAAO,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,CAAC,CAAC;SAC9C;QACD,IAAG,OAAO,IAAI,KAAK,QAAQ,IAAI,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,EAAG;YACjD,OAAO,GAAE,IAAI,CAAC;SACjB;QACD,GAAG,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,MAAM,EAAE,OAAO,EAAE,CAAE,CAAC;QACvC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;KAClB;;;;;;;IAID,SAAS,CAAC,UAAe,GAAG,EAAE,OAAS,GAAG,EAAE,OAAY;;YAChD,GAAG,GAAE,OAAO,CAAC,SAAS,EAAE;QAC5B,GAAG,CAAC,OAAO,GAAE,CAAC,OAAO,IAAE,MAAM,IAAI,cAAc,GAAG,OAAO,CAAC;QAC1D,IAAG,IAAI,CAAC,MAAM,EAAE;YAAE,GAAG,CAAC,OAAO,CAAC,GAAE,IAAI,CAAC,MAAM,CAAA;SAAE;QAE7C,IAAG,OAAO,IAAI,KAAK,QAAQ,IAAI,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,EAAG;YAClD,GAAG,CAAC,SAAS,GAAE,IAAI,CAAC;SACtB;QACD,IAAG,OAAO,IAAI,KAAK,QAAQ,EAAE;;gBACrB,MAAM,GAAE,EAAE;YACd,MAAM,CAAC,MAAM,CAAC,GAAE,IAAI,CAAC;YACrB,IAAG,OAAO,IAAI,OAAO,OAAO,KAAK,QAAQ,EAAE;gBACvC,IAAG,OAAO,CAAC,QAAQ,CAAC,EAAE;oBAAE,MAAM,CAAC,QAAQ,CAAC,GAAE,OAAO,CAAC,QAAQ,CAAC,CAAA;iBAAE;gBAC7D,IAAG,OAAO,CAAC,WAAW,CAAC,EAAE;oBAAE,MAAM,CAAC,WAAW,CAAC,GAAE,OAAO,CAAC,QAAQ,CAAC,CAAA;iBAAE;gBACnE,IAAG,OAAO,CAAC,QAAQ,CAAC;qBACf,OAAO,CAAC,QAAQ,CAAC,IAAE,OAAO,IAAI,OAAO,CAAC,QAAQ,CAAC,IAAE,MAAM,CAAC,EAAG;oBACxD,MAAM,CAAC,QAAQ,CAAC,GAAE,OAAO,CAAC,QAAQ,CAAC,CAAC;iBAC3C;gBACD,IAAG,OAAO,CAAC,QAAQ,CAAC;qBACf,OAAO,CAAC,QAAQ,CAAC,IAAE,SAAS,IAAI,OAAO,CAAC,QAAQ,CAAC,IAAE,OAAO;2BACxD,OAAO,CAAC,QAAQ,CAAC,IAAE,OAAO,CAAC,EAAG;oBAC7B,MAAM,CAAC,QAAQ,CAAC,GAAE,OAAO,CAAC,QAAQ,CAAC,CAAC;iBAC3C;aACJ;YACD,GAAG,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;SAC9B;QACD,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;KAClB;;;;;;;IAGD,WAAW,CAAC,UAAe,GAAG,EAAE,OAAS,GAAG;;YACpC,GAAG,GAAE,OAAO,CAAC,WAAW,EAAE;QAC9B,GAAG,CAAC,OAAO,GAAE,CAAC,OAAO,IAAE,MAAM,IAAI,cAAc,GAAG,OAAO,CAAC;QAC1D,IAAG,IAAI,CAAC,MAAM,EAAE;YAAE,GAAG,CAAC,OAAO,CAAC,GAAE,IAAI,CAAC,MAAM,CAAA;SAAE;QAE7C,IAAG,OAAO,IAAI,KAAK,QAAQ,IAAI,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,EAAG;YAClD,GAAG,CAAC,WAAW,GAAE,IAAI,CAAC;SACxB;QACD,IAAG,OAAO,IAAI,KAAK,QAAQ,EAAE;YAAE,GAAG,CAAC,WAAW,CAAC,IAAI,CAAC,EAAC,IAAI,EAAE,IAAI,EAAC,CAAC,CAAA;SAAE;QACnE,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;KAClB;;;;;;;IAID,MAAM,CAAC,GAAO,IAAY,QAAQ,GAAG,CAAC,OAAO,IAAG,IAAI,CAAC,MAAM,EAAC,EAAE;;;;;;IAE9D,OAAO,CAAC,GAAO,IAAY,OAAO,OAAO,GAAG,CAAC,OAAO,IAAG,WAAW,CAAA,EAAE;;;;;;IAEpE,OAAO,CAAC,GAAO,IAAY,OAAO,OAAO,GAAG,CAAC,OAAO,IAAG,WAAW,CAAA,EAAE;;;;;;IAEpE,UAAU,CAAC,GAAO,IAAY,OAAO,OAAO,GAAG,CAAC,SAAS,IAAG,WAAW,CAAA,EAAE;;;YAlL5E,UAAU,SAAC,EAAE,UAAU,EAAE,MAAM,EAAE;;;;;;;;;;MCErB,mBAAmB;;IAa5B;QACI,IAAI,CAAC,MAAM,GAAE,IAAI,OAAO,EAAU,CAAC;QACnC,IAAI,CAAC,OAAO,GAAE,IAAI,CAAC,MAAM,CAAC,YAAY,EAAE,CAAC;QACzC,IAAI,CAAC,QAAQ,GAAE,IAAI,OAAO,EAAU,CAAC;QACrC,IAAI,CAAC,SAAS,GAAE,IAAI,CAAC,QAAQ,CAAC,YAAY,EAAE,CAAC;KAChD;;;;IAED,WAAW,KAAK,IAAI,CAAC,MAAM,CAAC,SAAS,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,GAAG,SAAS,CAAC,EAAE;;;;;;IAGnE,IAAI,CAAC,UAAiB;QAClB,IAAG,QAAO,MAAM,CAAC,IAAG,WAAW,EAAE;YAAE,OAAO,KAAK,CAAA;SAAE;QACjD,IAAG,IAAI,CAAC,MAAM,EAAE;YAAE,IAAI,CAAC,MAAM,CAAC,SAAS,EAAE,CAAA;SAAE;QAE3C,IAAI,CAAC,MAAM,GAAE,IAAI,MAAM,CAAC,UAAU,CAAC,CAAC;QACpC,IAAI,CAAC,MAAM,CAAC,SAAS,GAAE,KAAK,MAAK,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAA,EAAE,CAAC;QAC7D,IAAI,CAAC,MAAM,CAAC,OAAO,GAAE,KAAK,MAAK,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAA,EAAE,CAAC;;KAE5D;;;;;;IAGD,WAAW,CAAC,GAAO,IAAI,IAAG,IAAI,CAAC,MAAM,EAAE;QAAC,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,GAAG,CAAC,CAAA;KAAE,EAAE;;;;;IAGxE,SAAS,KAAK,IAAG,IAAI,CAAC,MAAM,EAAE;QAAC,IAAI,CAAC,MAAM,CAAC,SAAS,EAAE,CAAA;KAAC,EAAE;;;YAtC5D,UAAU,SAAC,EAAE,UAAU,EAAE,MAAM,EAAE;;;;;;;;;;ACLlC,MASa,aAAa;;;;;;;;IA0CtB,YAAqB,IAAgB,EAClB,GAAgB,EAChB,MAAqB,EACrB,MAA2B;QAHzB,SAAI,GAAJ,IAAI,CAAY;QAClB,QAAG,GAAH,GAAG,CAAa;QAChB,WAAM,GAAN,MAAM,CAAe;QACrB,WAAM,GAAN,MAAM,CAAqB;QAvCtC,aAAQ,GAAU,IAAI,CAAC;;;QAQxB,WAAM,GAAE;YACX,SAAS,EAAE,EAAE;YACb,IAAI,EAAE,EAAE;YACR,WAAW,EAAE,EAAE;SAClB,CAAA;QA4BG,IAAI,CAAC,IAAI,EAAE,CAAC;KACf;;;;;;;IAtCO,KAAK,CAAC,GAAQ,IAAI,IAAG,SAAS,EAAE,EAAC;QAAE,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAA;KAAE,EAAE;;;;;IAW/D,IAAI,OAAO,KAAY,OAAO,QAAQ,CAAE,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,CAAE,CAAA,EAAE;;;;;IAClE,IAAI,OAAO,CAAC,GAAW;;YACf,CAAC,GAAS,GAAG,GAAE,GAAG;QACtB,IAAG,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,MAAM,IAAE,CAAC,EAAE;YAClC,IAAI,CAAC,QAAQ,GAAE,CAAC,CAAC;YACjB,IAAI,CAAC,KAAK,CAAC,gCAAgC,CAAC,EAAE,CAAC,CAAC;SACnD;aACI;YACD,IAAI,CAAC,QAAQ,GAAE,CAAC,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC,CAAC,IAAE,CAAC,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC;YAC5E,IAAI,CAAC,KAAK,CAAC,qCAAqC,CAAC,aAAa,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC;SAClF;KACJ;;;;;;IAED,IAAI,SAAS,CAAC,GAAU;QACpB,IAAI,CAAC,MAAM,GAAE,GAAG,CAAC;QACjB,IAAI,CAAC,GAAG,CAAC,KAAK,GAAE,GAAG,CAAC;QACpB,IAAI,CAAC,MAAM,CAAC,KAAK,GAAE,GAAG,CAAC;KAC1B;;;;;IAED,IAAI,OAAO,KAAK,OAAO,OAAO,CAAA,EAAE;;;;IAUhC,WAAW,KAAK,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,CAAA,EAAE;;;;;;;;;IAG7B,IAAI,CAAC,WAAgB,WAAW,EAAE,OAAY,IAAI,EAAE,SAAe,KAAK;QAC5E,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACzB,IAAG,MAAM,EAAE;YACP,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC;YACxB,IAAI,CAAC,IAAI,GAAG,IAAI,IAAI,GAAG,CAAC;SAC3B;aACI;YACD,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC;YACvB,IAAI,CAAC,IAAI,GAAG,IAAI,IAAI,EAAE,CAAC;SAC1B;KACJ;;;;;;;;;IAKD,KAAK,CAAC,WAAgB,IAAI,EAAE,OAAY,IAAI,EAAE,SAAe,KAAK;QAC9D,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,EAAE,MAAM,CAAC,CAAC;QAClC,OAAO,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;KAC/B;;;;;;;;IAED,OAAO,CAAC,WAAgB,IAAI,EAAE,OAAY,IAAI,EAAE,SAAe,KAAK;QAChE,OAAO,IAAI,OAAO,CAAE,CAAC,OAAO,EAAE,MAAM;YAChC,IAAI,CAAC,KAAK,CAAC,qCAAqC,CAAC,CAAC;YAClD,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE,IAAI,EAAE,MAAM,CAAC,CAAC,SAAS;;YACxC,QAAQ;gBACJ,IAAG,IAAI,CAAC,MAAM,EAAE;oBAAE,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,CAAA;iBAAE;gBACvC,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC;gBAC5B,IAAI,CAAC,GAAG,CAAC,QAAQ,GAAE,IAAI,CAAC,mBAAmB,EAAE,CAAC;gBAC9C,IAAI,CAAC,MAAM,CAAC,QAAQ,GAAE,IAAI,CAAC,qBAAqB,EAAE,CAAC;gBACnD,OAAO,CAAC,IAAI,CAAC,CAAC;aACjB,EACD,KAAK;gBACD,IAAI,CAAC,sBAAsB,EAAE,CAAC;gBAC9B,MAAM,CAAC,KAAK,CAAC,CAAC;aACjB,CACJ,CAAC;SACL,CAAC,CAAC;KACN;;;;;IAGD,UAAU,KAAK,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,SAAS,EAAE,CAAC,EAAE;;;;;;;;;IAG9D,aAAa,CAAC,WAAgB,IAAI,EAAE,OAAY,IAAI,EAAE,SAAe,KAAK,EAAE,YAAiB,IAAI;QAC7F,OAAO,IAAI,OAAO,CAAE,CAAC,OAAO,EAAE,MAAM;YAChC,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,IAAI,EAAE,MAAM,CAAC;iBACnC,IAAI,CAAE;;;oBAEC,GAAG,GAAE,IAAI,CAAC,qBAAqB,EAAE;gBACrC,IAAG,CAAC,GAAG,EAAE;oBACL,MAAM,CAAE,IAAI,KAAK,CAAC,4CAA4C,CAAC,CAAE,CAAC;oBAClE,OAAO;iBACV;gBACD,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,EAAE,SAAS,CAAC,CAAC;gBACjC,OAAO,CAAE,IAAI,CAAE,CAAC;aACnB,CAAC;iBACD,KAAK,CAAE,CAAC,MAAK,MAAM,CAAE,CAAC,CAAE,CAAA,EAAE,CAAC,CAAC;SAChC,CAAC,CAAC;KACN;;;;;;;;;IAGD,eAAe,CAAC,WAAgB,IAAI,EAAE,OAAY,IAAI,EAAE,SAAe,KAAK,EAAE,OAAW;QACrF,OAAO,IAAI,OAAO,CAAE,CAAC,OAAO,EAAE,MAAM;YAChC,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,IAAI,EAAE,MAAM,CAAC;iBACnC,IAAI,CAAE;;gBAEH,IAAI,CAAC,YAAY,CAAC,IAAI,EAAE,OAAO,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;gBAC9C,OAAO,CAAE,IAAI,CAAE,CAAC;aACnB,CAAC;iBACD,KAAK,CAAE,CAAC,MAAK,MAAM,CAAE,CAAC,CAAE,CAAA,EAAE,CAAC,CAAC;SAChC,CAAC,CAAA;KACL;;;;;;;;IAGD,UAAU,CAAC,MAAW,IAAI,EAAE,SAAiB,EAAE,KAAa;QACxD,IAAI,CAAC,KAAK,CAAC,qBAAqB,CAAC,CAAC;QAClC,IAAG,CAAC,GAAG,EAAE;YACL,GAAG,GAAE,IAAI,CAAC,qBAAqB,EAAE,CAAC;YAClC,IAAG,CAAC,GAAG,EAAE;gBACL,QAAQ,IAAI,KAAK,CAAC,4CAA4C,CAAC,EAAG;aACrE;SACJ;QACD,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,EAAE,SAAS,EAAE,KAAK,CAAC,CAAC;QACxC,OAAO,IAAI,CAAC;KACf;;;;;;;;IAGD,YAAY,CAAC,MAAW,IAAI,EAAE,OAAY,EAAE,KAAa;QACrD,IAAI,CAAC,KAAK,CAAC,uBAAuB,CAAC,CAAC;QACpC,IAAG,CAAC,GAAG,EAAE;YACL,GAAG,GAAE,IAAI,CAAC,qBAAqB,EAAE,CAAC;YAClC,IAAG,CAAC,GAAG,EAAE;gBACL,QAAQ,IAAI,KAAK,CAAC,4CAA4C,CAAC,EAAG;aACrE;YACD,GAAG,GAAE,GAAG,CAAC,OAAO,CAAC,QAAQ,EAAE,UAAU,CAAC,CAAC;SAC1C;;YACG,EAAE,GAAE,EAAE;;YACN,SAAiB;QACrB,IAAG,OAAO,IAAI,OAAO,OAAO,KAAI,QAAQ,EAAC;YACrC,EAAE,IAAG,CAAC,OAAO,CAAC,SAAS,IAAI,aAAa,GAAG,OAAO,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,EAAC,OAAO,CAAC,SAAS,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,GAAG,GAAG,GAAG,EAAE,CAAC;YAChH,EAAE,IAAG,CAAC,OAAO,CAAC,YAAY,IAAI,iBAAiB,OAAO,CAAC,YAAY,EAAE,GAAG,EAAE,CAAC;YAC3E,SAAS,GAAE,CAAC,OAAO,CAAC,SAAS,IAAI,OAAO,CAAC,SAAS,GAAG,IAAI,CAAC;SAC7D;QACD,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,GAAG,EAAE,EAAE,SAAS,EAAE,KAAK,CAAC,CAAC;QAC7C,OAAO,IAAI,CAAC;KACf;;;;;;;IAGO,YAAY,CAAC,QAAa;QAC9B,IAAI,CAAC,MAAM,CAAC,SAAS,GAAE,CAAC,QAAQ,CAAC,WAAW,CAAC,IAAI,QAAQ,CAAC,WAAW,CAAC,GAAG,EAAE,CAAC;QAC5E,IAAI,CAAC,MAAM,CAAC,IAAI,GAAE,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,QAAQ,CAAC,QAAQ,CAAC,GAAG,EAAE,CAAC;QACjE,IAAI,CAAC,MAAM,CAAC,WAAW,GAAE,CAAC,IAAI,CAAC,MAAM,CAAC,SAAS,IAAI,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,GAAG,EAAE,CAAC;QAC3F,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;KACrC;;;;;IAGM,qBAAqB;QACxB,IAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,YAAY,CAAC,EAAE;YAC3F,IAAI,CAAC,KAAK,CAAC,gCAAgC,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC;YAC5D,OAAO,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,YAAY,CAAC,EAAE,CAAC;SAClE;aACI,IAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,YAAY,CAAC,EAAE;YAC9E,IAAI,CAAC,KAAK,CAAC,gCAAgC,CAAC,CAAC;YAC7C,OAAO,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,YAAY,CAAC,EAAE,CAAA;SACxD;aACI;YAAE,OAAO,IAAI,CAAA;SAAE;KACvB;;;;;;IAGO,mBAAmB;;YACnB,GAAW;QACf,IAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE;;YAErC,IAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,cAAc,CAAC,EAAE;gBACrD,GAAG,GAAE,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,cAAc,CAAC,EAAE,CAAC;aAClE;iBACI;gBAAE,GAAG,GAAE,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,cAAc,CAAC,EAAE,CAAA;aAAE;SACjE;aACI;;gBACG,GAAG,GAAE,uFAAuF;YAChG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;SACnB;QACD,OAAO,GAAG,CAAC;KACd;;;;;;IAGO,sBAAsB;QAC1B,IAAI,CAAC,MAAM,CAAC,SAAS,GAAE,EAAE,CAAC;QAC1B,IAAI,CAAC,MAAM,CAAC,IAAI,GAAE,EAAE,CAAC;QACrB,IAAI,CAAC,MAAM,CAAC,WAAW,GAAE,EAAE,CAAC;KAC/B;;;;;;IAGD,GAAG,CAAC,IAAW;;YACP,GAAG,GAAE,GAAG,IAAI,CAAC,QAAQ,MAAM,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,EAAE;QACnF,IAAI,CAAC,KAAK,CAAC,OAAO,GAAG,EAAE,CAAC,CAAC;QACzB,IAAG,IAAI,CAAC,MAAM,EAAE;;gBACR,OAAO,GAAE,IAAI,WAAW,CAAE,EAAE,eAAe,EAAE,OAAO,IAAI,CAAC,MAAM,EAAE,EAAE,CAAE;YACzE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAE,GAAG,EAAE,EAAE,OAAO,EAAE,OAAO,EAAE,CAAE,CAAC;SACrD;aACI;YAAE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAA;SAAE;KACrC;;;;;;;;IAGD,GAAG,CAAC,IAAW,EAAE,KAAS;;YAClB,GAAG,GAAE,GAAG,IAAI,CAAC,QAAQ,MAAM,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,EAAE;QACnF,IAAI,CAAC,KAAK,CAAC,OAAO,GAAG,EAAE,CAAC,CAAC;QACzB,IAAG,IAAI,CAAC,MAAM,EAAE;;gBACR,OAAO,GAAE,IAAI,WAAW,CAAE,EAAE,eAAe,EAAE,OAAO,IAAI,CAAC,MAAM,EAAE,EAAE,CAAE;YACzE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAE,GAAG,EAAE,EAAE,OAAO,EAAE,OAAO,EAAE,CAAE,CAAC;SACrD;aACI;YAAE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,KAAK,CAAC,CAAA;SAAE;KAC5C;;;;;;;;IAGD,IAAI,CAAC,IAAW,EAAE,KAAS;;YACnB,GAAG,GAAE,GAAG,IAAI,CAAC,QAAQ,MAAM,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,EAAE;QACnF,IAAI,CAAC,KAAK,CAAC,QAAQ,GAAG,EAAE,CAAC,CAAC;QAC1B,IAAG,IAAI,CAAC,MAAM,EAAE;;gBACR,OAAO,GAAE,IAAI,WAAW,CAAE,EAAE,eAAe,EAAE,OAAO,IAAI,CAAC,MAAM,EAAE,EAAE,CAAE;YACzE,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAE,GAAG,EAAE,EAAE,OAAO,EAAE,OAAO,EAAE,CAAE,CAAC;SACtD;aACI;YAAE,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,KAAK,CAAC,CAAA;SAAE;KAC7C;;;;;;;;IAGD,KAAK,CAAC,QAAe,EAAE,QAAe;;YAC9B,OAAO,GAAE,IAAI,WAAW,EAAE,CAAC,GAAG,CAAC,cAAc,EAAE,kBAAkB,CAAC;QACtE,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CACjB,GAAG,IAAI,CAAC,QAAQ,MAAM,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,IAAI,YAAY,IAAI,CAAC,QAAQ,aAAa,EACtF,EAAE,UAAU,EAAE,QAAQ,EAAE,UAAU,EAAE,QAAQ,EAAE,EAC9C,EAAE,OAAO,EAAE,CACd,CAAC;KACL;;;;;IAGD,MAAM;;YACJ,GAAG,GAAC,GAAG,IAAI,CAAC,QAAQ,MAAM,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,IAAI,YAAY,IAAI,CAAC,QAAQ,cAAc;QACzF,IAAG,IAAI,CAAC,MAAM,EAAE;;gBACR,OAAO,GAAE,IAAI,WAAW,CAAE,EAAE,eAAe,EAAE,OAAO,IAAI,CAAC,MAAM,EAAE,EAAE,CAAE;YACzE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAE,GAAG,EAAE,IAAI,EAAE,EAAE,OAAO,EAAE,CAAE,CAAC;SAClD;aACI;YAAE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAE,GAAG,EAAE,IAAI,CAAE,CAAA;SAAE;KAC7C;;;;;;;IAGD,QAAQ,CAAC,OAAc,EAAE,IAAW;QAChC,IAAG,CAAC,IAAI,EAAE;YAAE,OAAM;SAAE;QACpB,IAAI,GAAE,IAAI,CAAC,KAAK,CAAC,CAAC,EAAC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC;;YACxC,GAAG,GAAE,IAAI,CAAC,mBAAmB,EAAE;QACnC,IAAG,CAAC,GAAG,EAAE;YAAE,OAAM;SAAE;QACnB,GAAG,GAAE,GAAG,GAAG,CAAC,OAAO,CAAC,KAAK,EAAC,UAAU,CAAC,GAAG,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,SAAS,IAAI,EAAE,CAAC;QACnF,IAAG,IAAI,CAAC,MAAM,EAAE;;gBACR,OAAO,GAAE,IAAI,WAAW,CAAE,EAAE,eAAe,EAAE,OAAO,IAAI,CAAC,MAAM,EAAE,EAAE,CAAE;YACzE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAE,GAAG,EAAE,EAAE,OAAO,EAAE,OAAO,EAAE,CAAE,CAAC;SACrD;aACI;YAAE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAA;SAAE;KACrC;;;YA9QJ,UAAU,SAAC,EAAE,UAAU,EAAE,MAAM,EAAE;;;;YAPzB,UAAU;YAEV,WAAW;YACX,aAAa;YAEb,mBAAmB;;;;;;;;MCQf,mBAAmB;;;YAP/B,QAAQ,SAAC;gBACN,OAAO,EAAE,CAAE,gBAAgB,CAAE;gBAC7B,YAAY,EAAE,EAAE;gBAChB,OAAO,EAAE,EAAE;gBACX,eAAe,EAAE,EAAE;gBACnB,SAAS,EAAE,EAAE;aAChB;;;;;;;;;;;;;;;"}
