{"version":3,"file":"signalk-client-angular.js.map","sources":["ng://signalk-client-angular/lib/signalk-client.ts"],"sourcesContent":["import { Injectable, isDevMode } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Subject, Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SignalKClient {\n\n\tprivate _connect; \t\t\t\n    public onConnect;\t \t\t\n\tprivate _close; \t\t\t\n    public onClose;\t \t\t    \n\tprivate _error; \t\t\t\n    public onError;\t \t\t    \n\tprivate _message; \t\t\t\n    public onMessage;\t \t\t  \n    private ws;                           \n    \n    private hostname: string;\n    private port: number;\n    private protocol: string;\n    private wsProtocol: string;\n\n    private _version: string= 'v1';      // ** default Signal K api version\n    private _filter= null;               // ** id of vessel to filter delta messages\n\n    // ** server information block **\n    private server= {\n        endpoints: {},\n        info: {},\n        apiVersions: [],\n        ws: { self: null, roles: {} }\n    }\n\n    private debug(val: any) { if(isDevMode()){ console.log(val) } }\n\n    constructor( private http: HttpClient ) { \n        this._connect= new Subject<string>();\n        this.onConnect= this._connect.asObservable();   \n        this._close= new Subject<string>();\n        this.onClose= this._close.asObservable();  \n        this._error= new Subject<string>();\n        this.onError= this._error.asObservable();  \n        this._message= new Subject<string>();\n        this.onMessage= this._message.asObservable();   \n        this.init();                          \n    }\n\n    // **************** Signal K API VERSION ***************************\n\n    // ** get / set Signal K preferred api version to use **\n    get version():number { return parseInt( this._version.slice(1) ) }\n\n    set version(val: number) {\n        let v:string= 'v'+ val;\n        if(this.server.apiVersions.length==0) { \n            this._version= v;\n            this.debug(`Signal K api version set to: ${v}`);\n        }\n        else {\n            this._version= (this.server.apiVersions.indexOf(v)!=-1) ? v : this._version;\n            this.debug(`Signal K api version set request: ${v}, result: ${this._version}`);\n        }\n    }\n\n    // **************** CONNECTION  ***************************\n\n    // ** initialise client connection settings\n    private init(hostname:string=null, port:number=null, useSSL:boolean=false) {\n        if(isDevMode()) { \n            hostname= hostname || '192.168.99.100';\n            port= port || 3000;  \n        }\n        else { hostname= hostname || 'localhost' }\n\n        this.hostname = hostname;\n        if(useSSL) {\n            this.protocol = 'https';\n            this.wsProtocol = 'wss';\n            this.port = port || 443;\n        } \n        else {\n            this.protocol = 'http';\n            this.wsProtocol = 'ws';\n            this.port = port || 80;\n        }        \n    }\n\n    // ** Signal K server discovery request (/signalk).  \n    hello(hostname:string=null, port:number=null, useSSL:boolean=false) {\n        this.init(hostname, port, useSSL);\n        return this.get('/signalk');\n    }    \n    \n    // ** connect to server\n    connect(hostname:string=null, port:number=null, useSSL:boolean=false, subscribe:string=null) {\n        this.debug('Contacting Signal K server.........');\n        this.hello(hostname, port).subscribe(    // ** discover endpoints **\n            response=> {\n                this.server.endpoints= (response['endpoints']) ? response['endpoints'] : {};\n                this.server.info= (response['server']) ? response['server'] : {};\n                this.server.apiVersions= (this.server.endpoints) ? Object.keys(this.server.endpoints) : [];\n                this.debug(this.server.endpoints);\n                \n                // ** connect to stream api at preferred version else fall back to default version\n                let url;\n                if(this.server.endpoints[this._version] && this.server.endpoints[this._version]['signalk-ws']) {\n                    this.debug(`Connecting endpoint version: ${this._version}`);\n                    url= `${this.server.endpoints[this._version]['signalk-ws']}`;\n                }\n                else if(this.server.endpoints['v1'] && this.server.endpoints['v1']['signalk-ws']) { \n                    this.debug(`Connection falling back to: v1`);\n                    url= `${this.server.endpoints['v1']['signalk-ws']}` \n                }\n                else { \n                    this._error.next( new Error('No Signal K endpoints found!') );\n                    return;\n                }\n                // ** subscribe **\n                if(subscribe && ['self','all','none'].indexOf(subscribe)!=-1) { \n                    url+=`?subscribe=${subscribe}`;\n                }                \n                this.debug(`Connecting to ${url}`);\n                this.connectDeltaByUrl(url);\n            },\n            error=> { \n                this.server.endpoints= {};\n                this.server.info= {};\n                this.server.apiVersions= [];            \n                return this._error.next( error );\n            }\n        );\n    }  \n\n    // ** connect to delta stream with no endpoint discovery\n    connectDelta(hostname:string=null, port:number=null, useSSL:boolean=false, subscribe:string=null) {\n        this.debug('ConnectDelta.........');\n        this.init(hostname, port, useSSL);\n        let url= `${this.wsProtocol}://${this.hostname}:${this.port}/signalk/${this._version}/stream`;\n        // ** subscribe **\n        if(subscribe && ['self','all','none'].indexOf(subscribe)!=-1) { \n            url+=`?subscribe=${subscribe}`;\n        }                \n        this.debug(`Connecting to delta stream at ${url}`);\n        this.connectDeltaByUrl(url);\n    }  \n\n\t// ** connect to delta stream at provided url\n\tprivate connectDeltaByUrl(url) {\n        if(this.ws) { this.disconnect() }\n\t\tthis.ws = new WebSocket(url);\n\t\t\n\t\tthis.ws.onopen= e=> { \n            this.debug(`ws.open`);\n\t\t\tthis._connect.next(e);\n\t\t}\n\t\tthis.ws.onclose= e=> { this.debug(`ws.close`); this._close.next(e) }\n\t\tthis.ws.onerror= e=> { this.debug(`ws.error`); this._error.next(e) }\n\t\tthis.ws.onmessage= e=> {\n            let data;\n            if(typeof e.data === 'string') {\n                try { data= JSON.parse(e.data) }\n                catch(e) { return }\n            }\n            if(this.isHello(data)) {\n                this.server.ws.roles= data.roles;\n                this.server.ws.self= data.self;\n            }          \n\t\t\tif(this._filter && this.isDelta(data)) {\n                if(data.context== this._filter) { this._message.next(data) } \n            }\n            else { this._message.next(data) }\n\t\t}\n    }  \n\n    // ** disconnect from Signal K stream\n    disconnect() {\n        this.ws.close();\n        this.ws= null;\n        this.server.ws= { self: null, roles: {} };\n    }\n\n\n    // **************** STREAM API ***************************\n\n    // ** send data to Signal K stream\n    send(data:any) {\n        if(this.ws) {\n            if(typeof data === 'object') { data= JSON.stringify(data) }\n            this.ws.send(data);\n        }\n    }\n\n    // ** Subscribe to Delta stream messages **\n    subscribe(context:string='*', path:string='*', ...options) {\n        let data= {\n            context: (context=='self') ? 'vessels.self' : context,\n            subscribe: []\n        };\n\n        let subscription= {};\n        subscription['path']= path;\n        for(let i in options) {\n            switch(i) {\n                case '0': \n                    if( !isNaN(options[i]) ) { subscription['period']= parseInt(options[i]) }\n                    break;\n                case '1': \n                    if( options[i]=='delta' || options[i]=='full') { \n                        subscription['format']= options[i] \n                    }\n                    break;\n                case '2': \n                    if( options[i]=='instant' || options[i]=='ideal' \n                            || options[i]== 'fixed' ) {\n                                subscription['policy']= options[i];\n                    }\n                    break;     \n                case '3': \n                    if(subscription['policy']=='instant') {\n                        if( !isNaN(options[i]) ) { subscription['minPeriod']= parseInt(options[i]) } \n                    }\n                    break;\n            }\n        }\n        data.subscribe.push(subscription);\n        this.send(data);        \n    }\n\n    // ** Unsubscribe from Delta stream messages **\n    unsubscribe(context:string='*', path:string='*') {\n        context= (context=='self') ? 'vessels.self' : context;\n        this.send({\n            \"context\": context,\n            \"unsubscribe\": [ {\"path\": path} ]\n        });\n    }\n\n    // ** returns true if recieved message is a Delta message\n    isDelta(msg) { return typeof msg.context!= 'undefined' }\n    // ** returns true if recieved message is a Hello message\n    isHello(msg) { return typeof msg.version!= 'undefined' }\n\n    // ** get / set filter to select delta messages just for supplied vessel id   \n    get filter(): string { return this._filter }\n    // ** set filter= null to remove message filtering\n    set filter(id:string) { \n        if(!id) {   // ** clear filter\n            this._filter=null;\n            return;\n        }\n        if( id.indexOf('self')!=-1 ) {  // ** self\n            if(!this.server.ws.self) {\n                this.getSelfId().subscribe( id=> { this._filter= id } );\n            }\n            else { this._filter= this.server.ws.self }\n        }\n        else {  // ** uuid\n            let uuid= RegExp(\"^urn:mrn:signalk:uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$\")\n            if(id.indexOf('vessels.')!=-1) { id= id.slice(id.indexOf('.')+1) }\n            if(uuid.test(id)) { this._filter= `vessels.${id}` }\n        }\n    }\n        \n\n    // **************** HTTP API ***************************\n    \n    // ** Returns the contents of the Signal K tree pointed to by self\n    getSelf() { return this.apiGet(`vessels/self`) }\n\n    // ** Returns the self identity\n    getSelfId() { return this.apiGet(`self`) }\n\n    // ** return observable response for meta object at the specified context and path\n    getMeta(context:string, path:string) { \n        return this.apiGet(`${this.contextToPath(context)}/${path.split('.').join('/')}/meta`);\n    }    \n\n    //** return observable response from http api path\n    apiGet(path:string) { \n        let url= this.resolveHttpEndpoint();\n        if(!url) { return }\n        if(path[0]=='/') { path= path.slice(1) }\n        url+= path;\n        this.debug(`apiGet ${url}`);\n        return this.http.get(url);\n    }\n\n    //** Send value to http api path\n    apiPut(context:string, path:string, key:any, value:any) { \n        let url= this.resolveHttpEndpoint();\n        if(!url) { return }\n        if(path[0]=='/') { path= path.slice(1) }\n        url+= this.contextToPath(context) + '/' + path;\n\n        let msg = { value: {} } \n        msg.value[key]= value;\n    \n        this.debug(`apiPut ${url}`);\n        this.debug(JSON.stringify(msg));\n        return this.http.put(url, msg);\n    }    \n    \n    //** return observable response from http path\n    private get(path:string) { \n        let url= `${this.protocol}://${this.hostname}:${this.port}${path}`;\n        this.debug(`get ${url}`);\n        return this.http.get(url);\n    };  \n\n    // ** return url for connected signalk-http endpoint\n    private resolveHttpEndpoint() {\n        let url;\n        if(this.server.endpoints[this._version]) { // ** connection made\n            // ** connect to http endpoint at prescribed version else fall back to default version\n            if(this.server.endpoints[this._version]['signalk-http']) {\n                url= `${this.server.endpoints[this._version]['signalk-http']}`;\n            }\n            else { url= `${this.server.endpoints['v1']['signalk-http']}` }   \n        } \n        else {\n            let msg= 'No current connection http endpoint service! Use connect() to establish a connection.'\n            this.debug(msg);\n            this._error.next(new Error(msg) );\n        } \n        return url;   \n    }\n\n    // ** parse context to valid Signal K path\n    private contextToPath(context:string) {\n        let res= (context=='self' ) ? 'vessels.self': context;\n        return res.split('.').join('/');\n    }\n\n}\n"],"names":[],"mappings":"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"}
